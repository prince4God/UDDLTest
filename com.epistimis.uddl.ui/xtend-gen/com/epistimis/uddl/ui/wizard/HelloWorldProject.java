/**
 * generated by Xtext 2.32.0
 */
package com.epistimis.uddl.ui.wizard;

import com.google.common.base.Objects;
import com.google.common.collect.Iterables;
import java.util.Collections;
import java.util.List;
import org.eclipse.core.runtime.IStatus;
import org.eclipse.core.runtime.Status;
import org.eclipse.jdt.core.JavaCore;
import org.eclipse.xtend2.lib.StringConcatenation;
import org.eclipse.xtext.ui.XtextProjectHelper;
import org.eclipse.xtext.ui.util.PluginProjectFactory;
import org.eclipse.xtext.ui.wizard.template.AbstractProjectTemplate;
import org.eclipse.xtext.ui.wizard.template.BooleanTemplateVariable;
import org.eclipse.xtext.ui.wizard.template.GroupTemplateVariable;
import org.eclipse.xtext.ui.wizard.template.IProjectGenerator;
import org.eclipse.xtext.ui.wizard.template.ProjectTemplate;
import org.eclipse.xtext.ui.wizard.template.StringSelectionTemplateVariable;
import org.eclipse.xtext.ui.wizard.template.StringTemplateVariable;
import org.eclipse.xtext.xbase.lib.CollectionLiterals;
import org.eclipse.xtext.xbase.lib.ObjectExtensions;
import org.eclipse.xtext.xbase.lib.Procedures.Procedure1;

@ProjectTemplate(label = "Hello World", icon = "project_template.png", description = "<p><b>Hello World</b></p>\n<p>This is a parameterized hello world for Uddl. You can set a parameter to modify the content in the generated file\nand a parameter to set the package the file is created in.</p>")
@SuppressWarnings("all")
public final class HelloWorldProject extends AbstractProjectTemplate {
  private final BooleanTemplateVariable advanced = this.check("Advanced:", false);

  private final GroupTemplateVariable advancedGroup = this.group("Properties");

  private final StringSelectionTemplateVariable name = this.combo("Name:", new String[] { "Data Model", "Logical Data Model", "Platform Data Model", "Conceptual Data Model" }, "Name of the data Model", this.advancedGroup);

  private final StringTemplateVariable path = this.text("Package:", "", this.advancedGroup);

  @Override
  protected void updateVariables() {
    this.name.setEnabled(this.advanced.getValue());
    this.path.setEnabled(this.advanced.getValue());
    boolean _value = this.advanced.getValue();
    boolean _not = (!_value);
    if (_not) {
      this.name.setValue("Data Model");
      this.path.setValue("uddl");
    }
  }

  @Override
  protected IStatus validate() {
    Status _xifexpression = null;
    boolean _matches = this.path.getValue().matches("[a-z][a-z0-9_]*(/[a-z][a-z0-9_]*)*");
    if (_matches) {
      _xifexpression = null;
    } else {
      _xifexpression = new Status(IStatus.ERROR, "Wizard", (("\'" + this.path) + "\' is not a valid package name"));
    }
    return _xifexpression;
  }

  @Override
  public void generateProjects(final IProjectGenerator generator) {
    PluginProjectFactory _pluginProjectFactory = new PluginProjectFactory();
    final Procedure1<PluginProjectFactory> _function = (PluginProjectFactory it) -> {
      it.setProjectName(this.getProjectInfo().getProjectName());
      it.setLocation(this.getProjectInfo().getLocationPath());
      List<String> _projectNatures = it.getProjectNatures();
      Iterables.<String>addAll(_projectNatures, Collections.<String>unmodifiableList(CollectionLiterals.<String>newArrayList(JavaCore.NATURE_ID, "org.eclipse.pde.PluginNature", XtextProjectHelper.NATURE_ID)));
      List<String> _builderIds = it.getBuilderIds();
      Iterables.<String>addAll(_builderIds, Collections.<String>unmodifiableList(CollectionLiterals.<String>newArrayList(JavaCore.BUILDER_ID, XtextProjectHelper.BUILDER_ID)));
      List<String> _folders = it.getFolders();
      _folders.add("src");
      List<String> _folders_1 = it.getFolders();
      _folders_1.add("src-gen");
      String _value = this.name.getValue();
      boolean _equals = Objects.equal(_value, "Data Model");
      if (_equals) {
        StringConcatenation _builder = new StringConcatenation();
        _builder.append("src/");
        _builder.append(this.path);
        _builder.append("/DataModel.uddl");
        StringConcatenation _builder_1 = new StringConcatenation();
        _builder_1.append("/*");
        _builder_1.newLine();
        _builder_1.append(" ");
        _builder_1.append("* This is an example model");
        _builder_1.newLine();
        _builder_1.append(" ");
        _builder_1.append("*/");
        _builder_1.newLine();
        _builder_1.append("dm DataModel \"description of the data model\" {");
        _builder_1.newLine();
        _builder_1.append("\t");
        _builder_1.append("/*");
        _builder_1.newLine();
        _builder_1.append("\t ");
        _builder_1.append("*Add Conceptual,Logical or Platform Data Model her");
        _builder_1.newLine();
        _builder_1.newLine();
        _builder_1.append("\t");
        _builder_1.append("*/");
        _builder_1.newLine();
        _builder_1.append("\t");
        _builder_1.newLine();
        _builder_1.append("}");
        _builder_1.newLine();
        this.addFile(it, _builder, _builder_1);
      } else {
        String _value_1 = this.name.getValue();
        boolean _equals_1 = Objects.equal(_value_1, "Conceptual Data Model");
        if (_equals_1) {
          StringConcatenation _builder_2 = new StringConcatenation();
          _builder_2.append("src/");
          _builder_2.append(this.path);
          _builder_2.append("/ConceptualModel.uddl");
          StringConcatenation _builder_3 = new StringConcatenation();
          _builder_3.append("/*");
          _builder_3.newLine();
          _builder_3.append(" ");
          _builder_3.append("* This is an example model");
          _builder_3.newLine();
          _builder_3.append(" ");
          _builder_3.append("*/");
          _builder_3.newLine();
          _builder_3.append(" ");
          _builder_3.append("dm DataModel \"description of the data model\"{");
          _builder_3.newLine();
          _builder_3.append(" \t");
          _builder_3.newLine();
          _builder_3.append(" \t");
          _builder_3.append("cdm ConceptualModel \"description of the Conceptual model\" {");
          _builder_3.newLine();
          _builder_3.append(" \t\t");
          _builder_3.append("/*");
          _builder_3.newLine();
          _builder_3.append("\t\t ");
          _builder_3.append("*Add Conceptual elements or Conceptual Data Models Here");
          _builder_3.newLine();
          _builder_3.append("\t\t");
          _builder_3.append("*/");
          _builder_3.newLine();
          _builder_3.append(" \t");
          _builder_3.append("}");
          _builder_3.newLine();
          _builder_3.append(" ");
          _builder_3.append("}");
          _builder_3.newLine();
          _builder_3.newLine();
          this.addFile(it, _builder_2, _builder_3);
        } else {
          String _value_2 = this.name.getValue();
          boolean _equals_2 = Objects.equal(_value_2, "Logical Data Model");
          if (_equals_2) {
            StringConcatenation _builder_4 = new StringConcatenation();
            _builder_4.append("src/");
            _builder_4.append(this.path);
            _builder_4.append("/LogicalDataModel.uddl");
            StringConcatenation _builder_5 = new StringConcatenation();
            _builder_5.append("/*");
            _builder_5.newLine();
            _builder_5.append(" ");
            _builder_5.append("* This is an example model");
            _builder_5.newLine();
            _builder_5.append(" ");
            _builder_5.append("*/");
            _builder_5.newLine();
            _builder_5.append("dm DataModel \"description of the data model\"{");
            _builder_5.newLine();
            _builder_5.append("\t");
            _builder_5.newLine();
            _builder_5.append("\t");
            _builder_5.append("ldm LogicalDataModel \"description of the Logical data model\" {");
            _builder_5.newLine();
            _builder_5.append("\t\t");
            _builder_5.append("/*");
            _builder_5.newLine();
            _builder_5.append("\t\t ");
            _builder_5.append("*Add Logical elements or Logical Data Models Here");
            _builder_5.newLine();
            _builder_5.append("\t\t");
            _builder_5.append("*/\t\t\t\t\t");
            _builder_5.newLine();
            _builder_5.append("    ");
            _builder_5.append("}");
            _builder_5.newLine();
            _builder_5.append("}");
            _builder_5.newLine();
            this.addFile(it, _builder_4, _builder_5);
          } else {
            String _value_3 = this.name.getValue();
            boolean _equals_3 = Objects.equal(_value_3, "Platform Data Model");
            if (_equals_3) {
              StringConcatenation _builder_6 = new StringConcatenation();
              _builder_6.append("src/");
              _builder_6.append(this.path);
              _builder_6.append("/PlatformDataModel.uddl");
              StringConcatenation _builder_7 = new StringConcatenation();
              _builder_7.append("/*");
              _builder_7.newLine();
              _builder_7.append(" ");
              _builder_7.append("* This is an example model");
              _builder_7.newLine();
              _builder_7.append(" ");
              _builder_7.append("*/");
              _builder_7.newLine();
              _builder_7.append("dm DataModel \"description of the data model\"{");
              _builder_7.newLine();
              _builder_7.append("\t");
              _builder_7.newLine();
              _builder_7.append("\t");
              _builder_7.append("pdm PlatformDataModel \"description of the Platform model\" {");
              _builder_7.newLine();
              _builder_7.append("\t\t");
              _builder_7.append("/*");
              _builder_7.newLine();
              _builder_7.append("\t\t ");
              _builder_7.append("*Add Platform elements or Platform data Models here");
              _builder_7.newLine();
              _builder_7.append("\t\t");
              _builder_7.append("*/");
              _builder_7.newLine();
              _builder_7.append("\t");
              _builder_7.append("}");
              _builder_7.newLine();
              _builder_7.append("}");
              _builder_7.newLine();
              this.addFile(it, _builder_6, _builder_7);
            } else {
              StringConcatenation _builder_8 = new StringConcatenation();
              _builder_8.append("src/");
              _builder_8.append(this.path);
              _builder_8.append("/DataModel.uddl");
              StringConcatenation _builder_9 = new StringConcatenation();
              _builder_9.append("/*");
              _builder_9.newLine();
              _builder_9.append(" ");
              _builder_9.append("* This is an example model");
              _builder_9.newLine();
              _builder_9.append(" ");
              _builder_9.append("*/");
              _builder_9.newLine();
              _builder_9.append("dm DataModel \"description of the data model\" {");
              _builder_9.newLine();
              _builder_9.append("\t");
              _builder_9.append("/*");
              _builder_9.newLine();
              _builder_9.append("\t ");
              _builder_9.append("*Add Conceptual,Logical or Platform Data Model here");
              _builder_9.newLine();
              _builder_9.append("\t");
              _builder_9.append("*/");
              _builder_9.newLine();
              _builder_9.append("\t");
              _builder_9.newLine();
              _builder_9.append("}");
              _builder_9.newLine();
              this.addFile(it, _builder_8, _builder_9);
            }
          }
        }
      }
    };
    PluginProjectFactory _doubleArrow = ObjectExtensions.<PluginProjectFactory>operator_doubleArrow(_pluginProjectFactory, _function);
    generator.generate(_doubleArrow);
  }
}
