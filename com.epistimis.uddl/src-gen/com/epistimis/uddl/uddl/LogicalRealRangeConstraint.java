/**
 * generated by Xtext 2.32.0
 * Copyright (c) 2022, 2023 Epistimis LLC (http://www.epistimis.com).
 */
package com.epistimis.uddl.uddl;


/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Logical Real Range Constraint</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link com.epistimis.uddl.uddl.LogicalRealRangeConstraint#isLowerBoundInclusive <em>Lower Bound Inclusive</em>}</li>
 *   <li>{@link com.epistimis.uddl.uddl.LogicalRealRangeConstraint#getLowerBound <em>Lower Bound</em>}</li>
 *   <li>{@link com.epistimis.uddl.uddl.LogicalRealRangeConstraint#getUpperBound <em>Upper Bound</em>}</li>
 *   <li>{@link com.epistimis.uddl.uddl.LogicalRealRangeConstraint#isUpperBoundInclusive <em>Upper Bound Inclusive</em>}</li>
 * </ul>
 *
 * @see com.epistimis.uddl.uddl.UddlPackage#getLogicalRealRangeConstraint()
 * @model
 * @generated
 */
public interface LogicalRealRangeConstraint extends LogicalConstraint
{
  /**
   * Returns the value of the '<em><b>Lower Bound Inclusive</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Lower Bound Inclusive</em>' attribute.
   * @see #setLowerBoundInclusive(boolean)
   * @see com.epistimis.uddl.uddl.UddlPackage#getLogicalRealRangeConstraint_LowerBoundInclusive()
   * @model
   * @generated
   */
  boolean isLowerBoundInclusive();

  /**
   * Sets the value of the '{@link com.epistimis.uddl.uddl.LogicalRealRangeConstraint#isLowerBoundInclusive <em>Lower Bound Inclusive</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Lower Bound Inclusive</em>' attribute.
   * @see #isLowerBoundInclusive()
   * @generated
   */
  void setLowerBoundInclusive(boolean value);

  /**
   * Returns the value of the '<em><b>Lower Bound</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Lower Bound</em>' attribute.
   * @see #setLowerBound(float)
   * @see com.epistimis.uddl.uddl.UddlPackage#getLogicalRealRangeConstraint_LowerBound()
   * @model
   * @generated
   */
  float getLowerBound();

  /**
   * Sets the value of the '{@link com.epistimis.uddl.uddl.LogicalRealRangeConstraint#getLowerBound <em>Lower Bound</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Lower Bound</em>' attribute.
   * @see #getLowerBound()
   * @generated
   */
  void setLowerBound(float value);

  /**
   * Returns the value of the '<em><b>Upper Bound</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Upper Bound</em>' attribute.
   * @see #setUpperBound(float)
   * @see com.epistimis.uddl.uddl.UddlPackage#getLogicalRealRangeConstraint_UpperBound()
   * @model
   * @generated
   */
  float getUpperBound();

  /**
   * Sets the value of the '{@link com.epistimis.uddl.uddl.LogicalRealRangeConstraint#getUpperBound <em>Upper Bound</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Upper Bound</em>' attribute.
   * @see #getUpperBound()
   * @generated
   */
  void setUpperBound(float value);

  /**
   * Returns the value of the '<em><b>Upper Bound Inclusive</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Upper Bound Inclusive</em>' attribute.
   * @see #setUpperBoundInclusive(boolean)
   * @see com.epistimis.uddl.uddl.UddlPackage#getLogicalRealRangeConstraint_UpperBoundInclusive()
   * @model
   * @generated
   */
  boolean isUpperBoundInclusive();

  /**
   * Sets the value of the '{@link com.epistimis.uddl.uddl.LogicalRealRangeConstraint#isUpperBoundInclusive <em>Upper Bound Inclusive</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Upper Bound Inclusive</em>' attribute.
   * @see #isUpperBoundInclusive()
   * @generated
   */
  void setUpperBoundInclusive(boolean value);

} // LogicalRealRangeConstraint
