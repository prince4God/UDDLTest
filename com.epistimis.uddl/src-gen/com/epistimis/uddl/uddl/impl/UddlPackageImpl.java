/**
 * generated by Xtext 2.32.0
 * Copyright (c) 2022, 2023 Epistimis LLC (http://www.epistimis.com).
 */
package com.epistimis.uddl.uddl.impl;

import com.epistimis.uddl.uddl.ConceptualAssociation;
import com.epistimis.uddl.uddl.ConceptualBasisEntity;
import com.epistimis.uddl.uddl.ConceptualCharacteristic;
import com.epistimis.uddl.uddl.ConceptualCharacteristicPathNode;
import com.epistimis.uddl.uddl.ConceptualComposableElement;
import com.epistimis.uddl.uddl.ConceptualCompositeQuery;
import com.epistimis.uddl.uddl.ConceptualComposition;
import com.epistimis.uddl.uddl.ConceptualDataModel;
import com.epistimis.uddl.uddl.ConceptualDomain;
import com.epistimis.uddl.uddl.ConceptualElement;
import com.epistimis.uddl.uddl.ConceptualEntity;
import com.epistimis.uddl.uddl.ConceptualObservable;
import com.epistimis.uddl.uddl.ConceptualParticipant;
import com.epistimis.uddl.uddl.ConceptualParticipantPathNode;
import com.epistimis.uddl.uddl.ConceptualPathNode;
import com.epistimis.uddl.uddl.ConceptualQuery;
import com.epistimis.uddl.uddl.ConceptualQueryComposition;
import com.epistimis.uddl.uddl.ConceptualView;
import com.epistimis.uddl.uddl.DataModel;
import com.epistimis.uddl.uddl.Include;
import com.epistimis.uddl.uddl.LogicalAbstractMeasurementSystem;
import com.epistimis.uddl.uddl.LogicalAffineConversion;
import com.epistimis.uddl.uddl.LogicalAssociation;
import com.epistimis.uddl.uddl.LogicalBoolean;
import com.epistimis.uddl.uddl.LogicalCharacter;
import com.epistimis.uddl.uddl.LogicalCharacteristic;
import com.epistimis.uddl.uddl.LogicalCharacteristicPathNode;
import com.epistimis.uddl.uddl.LogicalComposableElement;
import com.epistimis.uddl.uddl.LogicalCompositeQuery;
import com.epistimis.uddl.uddl.LogicalComposition;
import com.epistimis.uddl.uddl.LogicalConstraint;
import com.epistimis.uddl.uddl.LogicalConversion;
import com.epistimis.uddl.uddl.LogicalCoordinateSystem;
import com.epistimis.uddl.uddl.LogicalCoordinateSystemAxis;
import com.epistimis.uddl.uddl.LogicalDataModel;
import com.epistimis.uddl.uddl.LogicalElement;
import com.epistimis.uddl.uddl.LogicalEntity;
import com.epistimis.uddl.uddl.LogicalEnumerated;
import com.epistimis.uddl.uddl.LogicalEnumeratedBase;
import com.epistimis.uddl.uddl.LogicalEnumeratedSet;
import com.epistimis.uddl.uddl.LogicalEnumerationConstraint;
import com.epistimis.uddl.uddl.LogicalEnumerationLabel;
import com.epistimis.uddl.uddl.LogicalFixedLengthStringConstraint;
import com.epistimis.uddl.uddl.LogicalInteger;
import com.epistimis.uddl.uddl.LogicalIntegerRangeConstraint;
import com.epistimis.uddl.uddl.LogicalLandmark;
import com.epistimis.uddl.uddl.LogicalMeasurement;
import com.epistimis.uddl.uddl.LogicalMeasurementAttribute;
import com.epistimis.uddl.uddl.LogicalMeasurementAxis;
import com.epistimis.uddl.uddl.LogicalMeasurementConstraint;
import com.epistimis.uddl.uddl.LogicalMeasurementConversion;
import com.epistimis.uddl.uddl.LogicalMeasurementSystem;
import com.epistimis.uddl.uddl.LogicalMeasurementSystemAxis;
import com.epistimis.uddl.uddl.LogicalMeasurementSystemConversion;
import com.epistimis.uddl.uddl.LogicalNatural;
import com.epistimis.uddl.uddl.LogicalNonNegativeReal;
import com.epistimis.uddl.uddl.LogicalNumeric;
import com.epistimis.uddl.uddl.LogicalParticipant;
import com.epistimis.uddl.uddl.LogicalParticipantPathNode;
import com.epistimis.uddl.uddl.LogicalPathNode;
import com.epistimis.uddl.uddl.LogicalQuery;
import com.epistimis.uddl.uddl.LogicalQueryComposition;
import com.epistimis.uddl.uddl.LogicalReal;
import com.epistimis.uddl.uddl.LogicalRealRangeConstraint;
import com.epistimis.uddl.uddl.LogicalReferencePoint;
import com.epistimis.uddl.uddl.LogicalReferencePointPart;
import com.epistimis.uddl.uddl.LogicalRegularExpressionConstraint;
import com.epistimis.uddl.uddl.LogicalStandardMeasurementSystem;
import com.epistimis.uddl.uddl.LogicalString;
import com.epistimis.uddl.uddl.LogicalStringConstraint;
import com.epistimis.uddl.uddl.LogicalUnit;
import com.epistimis.uddl.uddl.LogicalValueType;
import com.epistimis.uddl.uddl.LogicalValueTypeUnit;
import com.epistimis.uddl.uddl.LogicalView;
import com.epistimis.uddl.uddl.PlatformArray;
import com.epistimis.uddl.uddl.PlatformAssociation;
import com.epistimis.uddl.uddl.PlatformBoolean;
import com.epistimis.uddl.uddl.PlatformBoundedString;
import com.epistimis.uddl.uddl.PlatformChar;
import com.epistimis.uddl.uddl.PlatformCharArray;
import com.epistimis.uddl.uddl.PlatformCharacteristic;
import com.epistimis.uddl.uddl.PlatformCharacteristicPathNode;
import com.epistimis.uddl.uddl.PlatformComposableElement;
import com.epistimis.uddl.uddl.PlatformCompositeQuery;
import com.epistimis.uddl.uddl.PlatformComposition;
import com.epistimis.uddl.uddl.PlatformDataModel;
import com.epistimis.uddl.uddl.PlatformDataType;
import com.epistimis.uddl.uddl.PlatformDouble;
import com.epistimis.uddl.uddl.PlatformElement;
import com.epistimis.uddl.uddl.PlatformEntity;
import com.epistimis.uddl.uddl.PlatformEnumeration;
import com.epistimis.uddl.uddl.PlatformFixed;
import com.epistimis.uddl.uddl.PlatformFloat;
import com.epistimis.uddl.uddl.PlatformInteger;
import com.epistimis.uddl.uddl.PlatformLong;
import com.epistimis.uddl.uddl.PlatformLongDouble;
import com.epistimis.uddl.uddl.PlatformLongLong;
import com.epistimis.uddl.uddl.PlatformNumber;
import com.epistimis.uddl.uddl.PlatformOctet;
import com.epistimis.uddl.uddl.PlatformParticipant;
import com.epistimis.uddl.uddl.PlatformParticipantPathNode;
import com.epistimis.uddl.uddl.PlatformPathNode;
import com.epistimis.uddl.uddl.PlatformPrimitive;
import com.epistimis.uddl.uddl.PlatformQuery;
import com.epistimis.uddl.uddl.PlatformQueryComposition;
import com.epistimis.uddl.uddl.PlatformReal;
import com.epistimis.uddl.uddl.PlatformSequence;
import com.epistimis.uddl.uddl.PlatformShort;
import com.epistimis.uddl.uddl.PlatformString;
import com.epistimis.uddl.uddl.PlatformStringType;
import com.epistimis.uddl.uddl.PlatformStruct;
import com.epistimis.uddl.uddl.PlatformStructMember;
import com.epistimis.uddl.uddl.PlatformULong;
import com.epistimis.uddl.uddl.PlatformULongLong;
import com.epistimis.uddl.uddl.PlatformUShort;
import com.epistimis.uddl.uddl.PlatformUnsignedInteger;
import com.epistimis.uddl.uddl.PlatformView;
import com.epistimis.uddl.uddl.Taxonomy;
import com.epistimis.uddl.uddl.UddlElement;
import com.epistimis.uddl.uddl.UddlFactory;
import com.epistimis.uddl.uddl.UddlPackage;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class UddlPackageImpl extends EPackageImpl implements UddlPackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass dataModelEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass includeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass uddlElementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass conceptualDataModelEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass logicalDataModelEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass platformDataModelEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass conceptualElementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass conceptualComposableElementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass conceptualBasisEntityEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass conceptualDomainEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass conceptualObservableEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass conceptualCharacteristicEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass conceptualEntityEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass conceptualCompositionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass conceptualAssociationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass conceptualParticipantEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass conceptualPathNodeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass conceptualParticipantPathNodeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass conceptualCharacteristicPathNodeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass conceptualViewEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass conceptualQueryEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass conceptualCompositeQueryEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass conceptualQueryCompositionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass logicalElementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass logicalUnitEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass logicalConversionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass logicalAffineConversionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass logicalValueTypeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass logicalStringEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass logicalCharacterEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass logicalBooleanEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass logicalNumericEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass logicalIntegerEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass logicalNaturalEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass logicalRealEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass logicalNonNegativeRealEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass logicalEnumeratedEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass taxonomyEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass logicalEnumeratedBaseEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass logicalEnumeratedSetEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass logicalEnumerationLabelEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass logicalCoordinateSystemEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass logicalCoordinateSystemAxisEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass logicalAbstractMeasurementSystemEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass logicalStandardMeasurementSystemEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass logicalLandmarkEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass logicalMeasurementSystemEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass logicalMeasurementSystemAxisEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass logicalReferencePointEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass logicalReferencePointPartEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass logicalValueTypeUnitEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass logicalConstraintEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass logicalIntegerRangeConstraintEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass logicalRealRangeConstraintEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass logicalStringConstraintEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass logicalRegularExpressionConstraintEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass logicalFixedLengthStringConstraintEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass logicalEnumerationConstraintEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass logicalMeasurementConstraintEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass logicalMeasurementSystemConversionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass logicalMeasurementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass logicalMeasurementAxisEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass logicalMeasurementAttributeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass logicalMeasurementConversionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass logicalComposableElementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass logicalCharacteristicEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass logicalEntityEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass logicalCompositionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass logicalAssociationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass logicalParticipantEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass logicalPathNodeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass logicalParticipantPathNodeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass logicalCharacteristicPathNodeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass logicalViewEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass logicalQueryEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass logicalCompositeQueryEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass logicalQueryCompositionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass platformElementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass platformComposableElementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass platformDataTypeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass platformPrimitiveEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass platformBooleanEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass platformOctetEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass platformCharEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass platformStringTypeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass platformStringEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass platformBoundedStringEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass platformCharArrayEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass platformEnumerationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass platformNumberEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass platformIntegerEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass platformShortEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass platformLongEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass platformLongLongEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass platformRealEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass platformDoubleEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass platformLongDoubleEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass platformFloatEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass platformFixedEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass platformUnsignedIntegerEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass platformUShortEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass platformULongEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass platformULongLongEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass platformSequenceEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass platformArrayEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass platformStructEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass platformStructMemberEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass platformCharacteristicEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass platformEntityEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass platformCompositionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass platformAssociationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass platformParticipantEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass platformPathNodeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass platformParticipantPathNodeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass platformCharacteristicPathNodeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass platformViewEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass platformQueryEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass platformCompositeQueryEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass platformQueryCompositionEClass = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see com.epistimis.uddl.uddl.UddlPackage#eNS_URI
   * @see #init()
   * @generated
   */
  private UddlPackageImpl()
  {
    super(eNS_URI, UddlFactory.eINSTANCE);
  }
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   *
   * <p>This method is used to initialize {@link UddlPackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static UddlPackage init()
  {
    if (isInited) return (UddlPackage)EPackage.Registry.INSTANCE.getEPackage(UddlPackage.eNS_URI);

    // Obtain or create and register package
    Object registeredUddlPackage = EPackage.Registry.INSTANCE.get(eNS_URI);
    UddlPackageImpl theUddlPackage = registeredUddlPackage instanceof UddlPackageImpl ? (UddlPackageImpl)registeredUddlPackage : new UddlPackageImpl();

    isInited = true;

    // Create package meta-data objects
    theUddlPackage.createPackageContents();

    // Initialize created meta-data
    theUddlPackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theUddlPackage.freeze();

    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(UddlPackage.eNS_URI, theUddlPackage);
    return theUddlPackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getDataModel()
  {
    return dataModelEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getDataModel_Cdm()
  {
    return (EReference)dataModelEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getDataModel_Ldm()
  {
    return (EReference)dataModelEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getDataModel_Pdm()
  {
    return (EReference)dataModelEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getInclude()
  {
    return includeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getInclude_ImportedNamespace()
  {
    return (EAttribute)includeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getUddlElement()
  {
    return uddlElementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getUddlElement_Name()
  {
    return (EAttribute)uddlElementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getUddlElement_Description()
  {
    return (EAttribute)uddlElementEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getConceptualDataModel()
  {
    return conceptualDataModelEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getConceptualDataModel_Element()
  {
    return (EReference)conceptualDataModelEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getConceptualDataModel_Cdm()
  {
    return (EReference)conceptualDataModelEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLogicalDataModel()
  {
    return logicalDataModelEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLogicalDataModel_Element()
  {
    return (EReference)logicalDataModelEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLogicalDataModel_Ldm()
  {
    return (EReference)logicalDataModelEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPlatformDataModel()
  {
    return platformDataModelEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPlatformDataModel_Element()
  {
    return (EReference)platformDataModelEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPlatformDataModel_Pdm()
  {
    return (EReference)platformDataModelEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getConceptualElement()
  {
    return conceptualElementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getConceptualComposableElement()
  {
    return conceptualComposableElementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getConceptualBasisEntity()
  {
    return conceptualBasisEntityEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getConceptualDomain()
  {
    return conceptualDomainEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getConceptualObservable()
  {
    return conceptualObservableEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getConceptualCharacteristic()
  {
    return conceptualCharacteristicEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getConceptualCharacteristic_Rolename()
  {
    return (EAttribute)conceptualCharacteristicEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getConceptualCharacteristic_LowerBound()
  {
    return (EAttribute)conceptualCharacteristicEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getConceptualCharacteristic_UpperBound()
  {
    return (EAttribute)conceptualCharacteristicEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getConceptualCharacteristic_Description()
  {
    return (EAttribute)conceptualCharacteristicEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getConceptualCharacteristic_Specializes()
  {
    return (EReference)conceptualCharacteristicEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getConceptualEntity()
  {
    return conceptualEntityEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getConceptualEntity_Specializes()
  {
    return (EReference)conceptualEntityEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getConceptualEntity_Composition()
  {
    return (EReference)conceptualEntityEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getConceptualEntity_BasisEntity()
  {
    return (EReference)conceptualEntityEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getConceptualComposition()
  {
    return conceptualCompositionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getConceptualComposition_Type()
  {
    return (EReference)conceptualCompositionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getConceptualAssociation()
  {
    return conceptualAssociationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getConceptualAssociation_ConceptualBasisEntity()
  {
    return (EReference)conceptualAssociationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getConceptualAssociation_Participant()
  {
    return (EReference)conceptualAssociationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getConceptualParticipant()
  {
    return conceptualParticipantEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getConceptualParticipant_Type()
  {
    return (EReference)conceptualParticipantEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getConceptualParticipant_SourceLowerBound()
  {
    return (EAttribute)conceptualParticipantEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getConceptualParticipant_SourceUpperBound()
  {
    return (EAttribute)conceptualParticipantEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getConceptualParticipant_Path()
  {
    return (EReference)conceptualParticipantEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getConceptualPathNode()
  {
    return conceptualPathNodeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getConceptualPathNode_Node()
  {
    return (EReference)conceptualPathNodeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getConceptualParticipantPathNode()
  {
    return conceptualParticipantPathNodeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getConceptualParticipantPathNode_ProjectedParticipant()
  {
    return (EReference)conceptualParticipantPathNodeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getConceptualCharacteristicPathNode()
  {
    return conceptualCharacteristicPathNodeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getConceptualCharacteristicPathNode_ProjectedCharacteristic()
  {
    return (EReference)conceptualCharacteristicPathNodeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getConceptualView()
  {
    return conceptualViewEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getConceptualQuery()
  {
    return conceptualQueryEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getConceptualQuery_Specification()
  {
    return (EAttribute)conceptualQueryEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getConceptualCompositeQuery()
  {
    return conceptualCompositeQueryEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getConceptualCompositeQuery_IsUnion()
  {
    return (EAttribute)conceptualCompositeQueryEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getConceptualCompositeQuery_Composition()
  {
    return (EReference)conceptualCompositeQueryEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getConceptualQueryComposition()
  {
    return conceptualQueryCompositionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getConceptualQueryComposition_Type()
  {
    return (EReference)conceptualQueryCompositionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getConceptualQueryComposition_Rolename()
  {
    return (EAttribute)conceptualQueryCompositionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLogicalElement()
  {
    return logicalElementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLogicalUnit()
  {
    return logicalUnitEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLogicalConversion()
  {
    return logicalConversionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLogicalConversion_Source()
  {
    return (EReference)logicalConversionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLogicalConversion_Destination()
  {
    return (EReference)logicalConversionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLogicalAffineConversion()
  {
    return logicalAffineConversionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getLogicalAffineConversion_ConversionFactor()
  {
    return (EAttribute)logicalAffineConversionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getLogicalAffineConversion_Offset()
  {
    return (EAttribute)logicalAffineConversionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLogicalValueType()
  {
    return logicalValueTypeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLogicalString()
  {
    return logicalStringEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLogicalCharacter()
  {
    return logicalCharacterEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLogicalBoolean()
  {
    return logicalBooleanEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLogicalNumeric()
  {
    return logicalNumericEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLogicalInteger()
  {
    return logicalIntegerEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLogicalNatural()
  {
    return logicalNaturalEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLogicalReal()
  {
    return logicalRealEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLogicalNonNegativeReal()
  {
    return logicalNonNegativeRealEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLogicalEnumerated()
  {
    return logicalEnumeratedEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getLogicalEnumerated_StandardReference()
  {
    return (EAttribute)logicalEnumeratedEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLogicalEnumerated_Label()
  {
    return (EReference)logicalEnumeratedEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getTaxonomy()
  {
    return taxonomyEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLogicalEnumeratedBase()
  {
    return logicalEnumeratedBaseEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLogicalEnumeratedSet()
  {
    return logicalEnumeratedSetEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLogicalEnumeratedSet_Label()
  {
    return (EReference)logicalEnumeratedSetEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLogicalEnumerationLabel()
  {
    return logicalEnumerationLabelEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLogicalCoordinateSystem()
  {
    return logicalCoordinateSystemEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getLogicalCoordinateSystem_AxisRelationshipDescription()
  {
    return (EAttribute)logicalCoordinateSystemEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getLogicalCoordinateSystem_AngleEquation()
  {
    return (EAttribute)logicalCoordinateSystemEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getLogicalCoordinateSystem_DistanceEquation()
  {
    return (EAttribute)logicalCoordinateSystemEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLogicalCoordinateSystem_Axis()
  {
    return (EReference)logicalCoordinateSystemEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLogicalCoordinateSystemAxis()
  {
    return logicalCoordinateSystemAxisEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLogicalAbstractMeasurementSystem()
  {
    return logicalAbstractMeasurementSystemEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLogicalStandardMeasurementSystem()
  {
    return logicalStandardMeasurementSystemEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getLogicalStandardMeasurementSystem_ReferenceStandard()
  {
    return (EAttribute)logicalStandardMeasurementSystemEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLogicalLandmark()
  {
    return logicalLandmarkEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLogicalMeasurementSystem()
  {
    return logicalMeasurementSystemEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLogicalMeasurementSystem_MeasurementSystemAxis()
  {
    return (EReference)logicalMeasurementSystemEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLogicalMeasurementSystem_CoordinateSystem()
  {
    return (EReference)logicalMeasurementSystemEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getLogicalMeasurementSystem_ExternalStandardReference()
  {
    return (EAttribute)logicalMeasurementSystemEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getLogicalMeasurementSystem_Orientation()
  {
    return (EAttribute)logicalMeasurementSystemEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLogicalMeasurementSystem_ReferencePoint()
  {
    return (EReference)logicalMeasurementSystemEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLogicalMeasurementSystem_Constraint()
  {
    return (EReference)logicalMeasurementSystemEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLogicalMeasurementSystemAxis()
  {
    return logicalMeasurementSystemAxisEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLogicalMeasurementSystemAxis_Axis()
  {
    return (EReference)logicalMeasurementSystemAxisEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLogicalMeasurementSystemAxis_DefaultValueTypeUnit()
  {
    return (EReference)logicalMeasurementSystemAxisEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLogicalMeasurementSystemAxis_Constraint()
  {
    return (EReference)logicalMeasurementSystemAxisEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLogicalReferencePoint()
  {
    return logicalReferencePointEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLogicalReferencePoint_Landmark()
  {
    return (EReference)logicalReferencePointEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLogicalReferencePoint_ReferencePointPart()
  {
    return (EReference)logicalReferencePointEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLogicalReferencePointPart()
  {
    return logicalReferencePointPartEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLogicalReferencePointPart_Axis()
  {
    return (EReference)logicalReferencePointPartEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getLogicalReferencePointPart_Value()
  {
    return (EAttribute)logicalReferencePointPartEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLogicalReferencePointPart_ValueTypeUnit()
  {
    return (EReference)logicalReferencePointPartEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLogicalValueTypeUnit()
  {
    return logicalValueTypeUnitEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLogicalValueTypeUnit_ValueType()
  {
    return (EReference)logicalValueTypeUnitEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLogicalValueTypeUnit_Unit()
  {
    return (EReference)logicalValueTypeUnitEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLogicalValueTypeUnit_Constraint()
  {
    return (EReference)logicalValueTypeUnitEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLogicalConstraint()
  {
    return logicalConstraintEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLogicalIntegerRangeConstraint()
  {
    return logicalIntegerRangeConstraintEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getLogicalIntegerRangeConstraint_LowerBound()
  {
    return (EAttribute)logicalIntegerRangeConstraintEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getLogicalIntegerRangeConstraint_UpperBound()
  {
    return (EAttribute)logicalIntegerRangeConstraintEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLogicalRealRangeConstraint()
  {
    return logicalRealRangeConstraintEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getLogicalRealRangeConstraint_LowerBoundInclusive()
  {
    return (EAttribute)logicalRealRangeConstraintEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getLogicalRealRangeConstraint_LowerBound()
  {
    return (EAttribute)logicalRealRangeConstraintEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getLogicalRealRangeConstraint_UpperBound()
  {
    return (EAttribute)logicalRealRangeConstraintEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getLogicalRealRangeConstraint_UpperBoundInclusive()
  {
    return (EAttribute)logicalRealRangeConstraintEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLogicalStringConstraint()
  {
    return logicalStringConstraintEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLogicalRegularExpressionConstraint()
  {
    return logicalRegularExpressionConstraintEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getLogicalRegularExpressionConstraint_Expression()
  {
    return (EAttribute)logicalRegularExpressionConstraintEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLogicalFixedLengthStringConstraint()
  {
    return logicalFixedLengthStringConstraintEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getLogicalFixedLengthStringConstraint_Length()
  {
    return (EAttribute)logicalFixedLengthStringConstraintEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLogicalEnumerationConstraint()
  {
    return logicalEnumerationConstraintEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLogicalEnumerationConstraint_AllowedValue()
  {
    return (EReference)logicalEnumerationConstraintEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLogicalMeasurementConstraint()
  {
    return logicalMeasurementConstraintEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getLogicalMeasurementConstraint_ConstraintText()
  {
    return (EAttribute)logicalMeasurementConstraintEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLogicalMeasurementSystemConversion()
  {
    return logicalMeasurementSystemConversionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLogicalMeasurementSystemConversion_Source()
  {
    return (EReference)logicalMeasurementSystemConversionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getLogicalMeasurementSystemConversion_Equation()
  {
    return (EAttribute)logicalMeasurementSystemConversionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLogicalMeasurementSystemConversion_Destination()
  {
    return (EReference)logicalMeasurementSystemConversionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getLogicalMeasurementSystemConversion_ConversionLossDescription()
  {
    return (EAttribute)logicalMeasurementSystemConversionEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLogicalMeasurement()
  {
    return logicalMeasurementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLogicalMeasurement_Realizes()
  {
    return (EReference)logicalMeasurementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLogicalMeasurement_Attribute()
  {
    return (EReference)logicalMeasurementEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLogicalMeasurement_MeasurementAxis()
  {
    return (EReference)logicalMeasurementEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLogicalMeasurement_MeasurementSystem()
  {
    return (EReference)logicalMeasurementEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLogicalMeasurement_Constraint()
  {
    return (EReference)logicalMeasurementEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLogicalMeasurementAxis()
  {
    return logicalMeasurementAxisEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLogicalMeasurementAxis_Realizes()
  {
    return (EReference)logicalMeasurementAxisEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLogicalMeasurementAxis_ValueTypeUnit()
  {
    return (EReference)logicalMeasurementAxisEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLogicalMeasurementAxis_MeasurementSystemAxis()
  {
    return (EReference)logicalMeasurementAxisEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLogicalMeasurementAxis_Constraint()
  {
    return (EReference)logicalMeasurementAxisEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLogicalMeasurementAttribute()
  {
    return logicalMeasurementAttributeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLogicalMeasurementAttribute_Type()
  {
    return (EReference)logicalMeasurementAttributeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getLogicalMeasurementAttribute_Rolename()
  {
    return (EAttribute)logicalMeasurementAttributeEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLogicalMeasurementConversion()
  {
    return logicalMeasurementConversionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLogicalMeasurementConversion_Source()
  {
    return (EReference)logicalMeasurementConversionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getLogicalMeasurementConversion_Equation()
  {
    return (EAttribute)logicalMeasurementConversionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLogicalMeasurementConversion_Destination()
  {
    return (EReference)logicalMeasurementConversionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getLogicalMeasurementConversion_ConversionLossDescription()
  {
    return (EAttribute)logicalMeasurementConversionEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLogicalComposableElement()
  {
    return logicalComposableElementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLogicalCharacteristic()
  {
    return logicalCharacteristicEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getLogicalCharacteristic_Rolename()
  {
    return (EAttribute)logicalCharacteristicEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getLogicalCharacteristic_LowerBound()
  {
    return (EAttribute)logicalCharacteristicEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getLogicalCharacteristic_UpperBound()
  {
    return (EAttribute)logicalCharacteristicEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getLogicalCharacteristic_Description()
  {
    return (EAttribute)logicalCharacteristicEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLogicalCharacteristic_Specializes()
  {
    return (EReference)logicalCharacteristicEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLogicalEntity()
  {
    return logicalEntityEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLogicalEntity_Specializes()
  {
    return (EReference)logicalEntityEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLogicalEntity_Realizes()
  {
    return (EReference)logicalEntityEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLogicalEntity_Composition()
  {
    return (EReference)logicalEntityEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLogicalComposition()
  {
    return logicalCompositionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLogicalComposition_Type()
  {
    return (EReference)logicalCompositionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLogicalComposition_Realizes()
  {
    return (EReference)logicalCompositionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLogicalAssociation()
  {
    return logicalAssociationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLogicalAssociation_Participant()
  {
    return (EReference)logicalAssociationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLogicalParticipant()
  {
    return logicalParticipantEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLogicalParticipant_Type()
  {
    return (EReference)logicalParticipantEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLogicalParticipant_Realizes()
  {
    return (EReference)logicalParticipantEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getLogicalParticipant_SourceLowerBound()
  {
    return (EAttribute)logicalParticipantEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getLogicalParticipant_SourceUpperBound()
  {
    return (EAttribute)logicalParticipantEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLogicalParticipant_Path()
  {
    return (EReference)logicalParticipantEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLogicalPathNode()
  {
    return logicalPathNodeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLogicalPathNode_Node()
  {
    return (EReference)logicalPathNodeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLogicalParticipantPathNode()
  {
    return logicalParticipantPathNodeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLogicalParticipantPathNode_ProjectedParticipant()
  {
    return (EReference)logicalParticipantPathNodeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLogicalCharacteristicPathNode()
  {
    return logicalCharacteristicPathNodeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLogicalCharacteristicPathNode_ProjectedCharacteristic()
  {
    return (EReference)logicalCharacteristicPathNodeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLogicalView()
  {
    return logicalViewEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLogicalQuery()
  {
    return logicalQueryEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLogicalQuery_Realizes()
  {
    return (EReference)logicalQueryEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getLogicalQuery_Specification()
  {
    return (EAttribute)logicalQueryEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLogicalCompositeQuery()
  {
    return logicalCompositeQueryEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLogicalCompositeQuery_Realizes()
  {
    return (EReference)logicalCompositeQueryEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getLogicalCompositeQuery_IsUnion()
  {
    return (EAttribute)logicalCompositeQueryEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLogicalCompositeQuery_Composition()
  {
    return (EReference)logicalCompositeQueryEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLogicalQueryComposition()
  {
    return logicalQueryCompositionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLogicalQueryComposition_Type()
  {
    return (EReference)logicalQueryCompositionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getLogicalQueryComposition_Rolename()
  {
    return (EAttribute)logicalQueryCompositionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLogicalQueryComposition_Realizes()
  {
    return (EReference)logicalQueryCompositionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPlatformElement()
  {
    return platformElementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPlatformComposableElement()
  {
    return platformComposableElementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPlatformDataType()
  {
    return platformDataTypeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPlatformDataType_Realizes()
  {
    return (EReference)platformDataTypeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPlatformPrimitive()
  {
    return platformPrimitiveEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPlatformBoolean()
  {
    return platformBooleanEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPlatformOctet()
  {
    return platformOctetEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPlatformChar()
  {
    return platformCharEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPlatformStringType()
  {
    return platformStringTypeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPlatformString()
  {
    return platformStringEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPlatformBoundedString()
  {
    return platformBoundedStringEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getPlatformBoundedString_MaxLength()
  {
    return (EAttribute)platformBoundedStringEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPlatformCharArray()
  {
    return platformCharArrayEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getPlatformCharArray_Length()
  {
    return (EAttribute)platformCharArrayEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPlatformEnumeration()
  {
    return platformEnumerationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPlatformNumber()
  {
    return platformNumberEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPlatformInteger()
  {
    return platformIntegerEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPlatformShort()
  {
    return platformShortEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPlatformLong()
  {
    return platformLongEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPlatformLongLong()
  {
    return platformLongLongEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPlatformReal()
  {
    return platformRealEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPlatformDouble()
  {
    return platformDoubleEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPlatformLongDouble()
  {
    return platformLongDoubleEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPlatformFloat()
  {
    return platformFloatEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPlatformFixed()
  {
    return platformFixedEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getPlatformFixed_Digits()
  {
    return (EAttribute)platformFixedEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getPlatformFixed_Scale()
  {
    return (EAttribute)platformFixedEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPlatformUnsignedInteger()
  {
    return platformUnsignedIntegerEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPlatformUShort()
  {
    return platformUShortEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPlatformULong()
  {
    return platformULongEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPlatformULongLong()
  {
    return platformULongLongEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPlatformSequence()
  {
    return platformSequenceEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getPlatformSequence_MaxSize()
  {
    return (EAttribute)platformSequenceEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPlatformArray()
  {
    return platformArrayEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getPlatformArray_Size()
  {
    return (EAttribute)platformArrayEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPlatformStruct()
  {
    return platformStructEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPlatformStruct_Member()
  {
    return (EReference)platformStructEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPlatformStructMember()
  {
    return platformStructMemberEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPlatformStructMember_Type()
  {
    return (EReference)platformStructMemberEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getPlatformStructMember_Rolename()
  {
    return (EAttribute)platformStructMemberEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getPlatformStructMember_Precision()
  {
    return (EAttribute)platformStructMemberEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPlatformStructMember_Realizes()
  {
    return (EReference)platformStructMemberEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPlatformCharacteristic()
  {
    return platformCharacteristicEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getPlatformCharacteristic_Rolename()
  {
    return (EAttribute)platformCharacteristicEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getPlatformCharacteristic_LowerBound()
  {
    return (EAttribute)platformCharacteristicEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getPlatformCharacteristic_UpperBound()
  {
    return (EAttribute)platformCharacteristicEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getPlatformCharacteristic_Description()
  {
    return (EAttribute)platformCharacteristicEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPlatformCharacteristic_Specializes()
  {
    return (EReference)platformCharacteristicEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPlatformEntity()
  {
    return platformEntityEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPlatformEntity_Specializes()
  {
    return (EReference)platformEntityEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPlatformEntity_Realizes()
  {
    return (EReference)platformEntityEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPlatformEntity_Composition()
  {
    return (EReference)platformEntityEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPlatformComposition()
  {
    return platformCompositionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPlatformComposition_Type()
  {
    return (EReference)platformCompositionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPlatformComposition_Realizes()
  {
    return (EReference)platformCompositionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getPlatformComposition_Precision()
  {
    return (EAttribute)platformCompositionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPlatformAssociation()
  {
    return platformAssociationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPlatformAssociation_Participant()
  {
    return (EReference)platformAssociationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPlatformParticipant()
  {
    return platformParticipantEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPlatformParticipant_Type()
  {
    return (EReference)platformParticipantEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPlatformParticipant_Realizes()
  {
    return (EReference)platformParticipantEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getPlatformParticipant_SourceLowerBound()
  {
    return (EAttribute)platformParticipantEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getPlatformParticipant_SourceUpperBound()
  {
    return (EAttribute)platformParticipantEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPlatformParticipant_Path()
  {
    return (EReference)platformParticipantEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPlatformPathNode()
  {
    return platformPathNodeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPlatformPathNode_Node()
  {
    return (EReference)platformPathNodeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPlatformParticipantPathNode()
  {
    return platformParticipantPathNodeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPlatformParticipantPathNode_ProjectedParticipant()
  {
    return (EReference)platformParticipantPathNodeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPlatformCharacteristicPathNode()
  {
    return platformCharacteristicPathNodeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPlatformCharacteristicPathNode_ProjectedCharacteristic()
  {
    return (EReference)platformCharacteristicPathNodeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPlatformView()
  {
    return platformViewEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPlatformView_Realizes()
  {
    return (EReference)platformViewEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPlatformQuery()
  {
    return platformQueryEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getPlatformQuery_Specification()
  {
    return (EAttribute)platformQueryEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPlatformCompositeQuery()
  {
    return platformCompositeQueryEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getPlatformCompositeQuery_IsUnion()
  {
    return (EAttribute)platformCompositeQueryEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPlatformCompositeQuery_Composition()
  {
    return (EReference)platformCompositeQueryEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPlatformQueryComposition()
  {
    return platformQueryCompositionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPlatformQueryComposition_Type()
  {
    return (EReference)platformQueryCompositionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getPlatformQueryComposition_Rolename()
  {
    return (EAttribute)platformQueryCompositionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPlatformQueryComposition_Realizes()
  {
    return (EReference)platformQueryCompositionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public UddlFactory getUddlFactory()
  {
    return (UddlFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    dataModelEClass = createEClass(DATA_MODEL);
    createEReference(dataModelEClass, DATA_MODEL__CDM);
    createEReference(dataModelEClass, DATA_MODEL__LDM);
    createEReference(dataModelEClass, DATA_MODEL__PDM);

    includeEClass = createEClass(INCLUDE);
    createEAttribute(includeEClass, INCLUDE__IMPORTED_NAMESPACE);

    uddlElementEClass = createEClass(UDDL_ELEMENT);
    createEAttribute(uddlElementEClass, UDDL_ELEMENT__NAME);
    createEAttribute(uddlElementEClass, UDDL_ELEMENT__DESCRIPTION);

    conceptualDataModelEClass = createEClass(CONCEPTUAL_DATA_MODEL);
    createEReference(conceptualDataModelEClass, CONCEPTUAL_DATA_MODEL__ELEMENT);
    createEReference(conceptualDataModelEClass, CONCEPTUAL_DATA_MODEL__CDM);

    logicalDataModelEClass = createEClass(LOGICAL_DATA_MODEL);
    createEReference(logicalDataModelEClass, LOGICAL_DATA_MODEL__ELEMENT);
    createEReference(logicalDataModelEClass, LOGICAL_DATA_MODEL__LDM);

    platformDataModelEClass = createEClass(PLATFORM_DATA_MODEL);
    createEReference(platformDataModelEClass, PLATFORM_DATA_MODEL__ELEMENT);
    createEReference(platformDataModelEClass, PLATFORM_DATA_MODEL__PDM);

    conceptualElementEClass = createEClass(CONCEPTUAL_ELEMENT);

    conceptualComposableElementEClass = createEClass(CONCEPTUAL_COMPOSABLE_ELEMENT);

    conceptualBasisEntityEClass = createEClass(CONCEPTUAL_BASIS_ENTITY);

    conceptualDomainEClass = createEClass(CONCEPTUAL_DOMAIN);

    conceptualObservableEClass = createEClass(CONCEPTUAL_OBSERVABLE);

    conceptualCharacteristicEClass = createEClass(CONCEPTUAL_CHARACTERISTIC);
    createEAttribute(conceptualCharacteristicEClass, CONCEPTUAL_CHARACTERISTIC__ROLENAME);
    createEAttribute(conceptualCharacteristicEClass, CONCEPTUAL_CHARACTERISTIC__LOWER_BOUND);
    createEAttribute(conceptualCharacteristicEClass, CONCEPTUAL_CHARACTERISTIC__UPPER_BOUND);
    createEAttribute(conceptualCharacteristicEClass, CONCEPTUAL_CHARACTERISTIC__DESCRIPTION);
    createEReference(conceptualCharacteristicEClass, CONCEPTUAL_CHARACTERISTIC__SPECIALIZES);

    conceptualEntityEClass = createEClass(CONCEPTUAL_ENTITY);
    createEReference(conceptualEntityEClass, CONCEPTUAL_ENTITY__SPECIALIZES);
    createEReference(conceptualEntityEClass, CONCEPTUAL_ENTITY__COMPOSITION);
    createEReference(conceptualEntityEClass, CONCEPTUAL_ENTITY__BASIS_ENTITY);

    conceptualCompositionEClass = createEClass(CONCEPTUAL_COMPOSITION);
    createEReference(conceptualCompositionEClass, CONCEPTUAL_COMPOSITION__TYPE);

    conceptualAssociationEClass = createEClass(CONCEPTUAL_ASSOCIATION);
    createEReference(conceptualAssociationEClass, CONCEPTUAL_ASSOCIATION__CONCEPTUAL_BASIS_ENTITY);
    createEReference(conceptualAssociationEClass, CONCEPTUAL_ASSOCIATION__PARTICIPANT);

    conceptualParticipantEClass = createEClass(CONCEPTUAL_PARTICIPANT);
    createEReference(conceptualParticipantEClass, CONCEPTUAL_PARTICIPANT__TYPE);
    createEAttribute(conceptualParticipantEClass, CONCEPTUAL_PARTICIPANT__SOURCE_LOWER_BOUND);
    createEAttribute(conceptualParticipantEClass, CONCEPTUAL_PARTICIPANT__SOURCE_UPPER_BOUND);
    createEReference(conceptualParticipantEClass, CONCEPTUAL_PARTICIPANT__PATH);

    conceptualPathNodeEClass = createEClass(CONCEPTUAL_PATH_NODE);
    createEReference(conceptualPathNodeEClass, CONCEPTUAL_PATH_NODE__NODE);

    conceptualParticipantPathNodeEClass = createEClass(CONCEPTUAL_PARTICIPANT_PATH_NODE);
    createEReference(conceptualParticipantPathNodeEClass, CONCEPTUAL_PARTICIPANT_PATH_NODE__PROJECTED_PARTICIPANT);

    conceptualCharacteristicPathNodeEClass = createEClass(CONCEPTUAL_CHARACTERISTIC_PATH_NODE);
    createEReference(conceptualCharacteristicPathNodeEClass, CONCEPTUAL_CHARACTERISTIC_PATH_NODE__PROJECTED_CHARACTERISTIC);

    conceptualViewEClass = createEClass(CONCEPTUAL_VIEW);

    conceptualQueryEClass = createEClass(CONCEPTUAL_QUERY);
    createEAttribute(conceptualQueryEClass, CONCEPTUAL_QUERY__SPECIFICATION);

    conceptualCompositeQueryEClass = createEClass(CONCEPTUAL_COMPOSITE_QUERY);
    createEAttribute(conceptualCompositeQueryEClass, CONCEPTUAL_COMPOSITE_QUERY__IS_UNION);
    createEReference(conceptualCompositeQueryEClass, CONCEPTUAL_COMPOSITE_QUERY__COMPOSITION);

    conceptualQueryCompositionEClass = createEClass(CONCEPTUAL_QUERY_COMPOSITION);
    createEReference(conceptualQueryCompositionEClass, CONCEPTUAL_QUERY_COMPOSITION__TYPE);
    createEAttribute(conceptualQueryCompositionEClass, CONCEPTUAL_QUERY_COMPOSITION__ROLENAME);

    logicalElementEClass = createEClass(LOGICAL_ELEMENT);

    logicalUnitEClass = createEClass(LOGICAL_UNIT);

    logicalConversionEClass = createEClass(LOGICAL_CONVERSION);
    createEReference(logicalConversionEClass, LOGICAL_CONVERSION__SOURCE);
    createEReference(logicalConversionEClass, LOGICAL_CONVERSION__DESTINATION);

    logicalAffineConversionEClass = createEClass(LOGICAL_AFFINE_CONVERSION);
    createEAttribute(logicalAffineConversionEClass, LOGICAL_AFFINE_CONVERSION__CONVERSION_FACTOR);
    createEAttribute(logicalAffineConversionEClass, LOGICAL_AFFINE_CONVERSION__OFFSET);

    logicalValueTypeEClass = createEClass(LOGICAL_VALUE_TYPE);

    logicalStringEClass = createEClass(LOGICAL_STRING);

    logicalCharacterEClass = createEClass(LOGICAL_CHARACTER);

    logicalBooleanEClass = createEClass(LOGICAL_BOOLEAN);

    logicalNumericEClass = createEClass(LOGICAL_NUMERIC);

    logicalIntegerEClass = createEClass(LOGICAL_INTEGER);

    logicalNaturalEClass = createEClass(LOGICAL_NATURAL);

    logicalRealEClass = createEClass(LOGICAL_REAL);

    logicalNonNegativeRealEClass = createEClass(LOGICAL_NON_NEGATIVE_REAL);

    logicalEnumeratedEClass = createEClass(LOGICAL_ENUMERATED);
    createEAttribute(logicalEnumeratedEClass, LOGICAL_ENUMERATED__STANDARD_REFERENCE);
    createEReference(logicalEnumeratedEClass, LOGICAL_ENUMERATED__LABEL);

    taxonomyEClass = createEClass(TAXONOMY);

    logicalEnumeratedBaseEClass = createEClass(LOGICAL_ENUMERATED_BASE);

    logicalEnumeratedSetEClass = createEClass(LOGICAL_ENUMERATED_SET);
    createEReference(logicalEnumeratedSetEClass, LOGICAL_ENUMERATED_SET__LABEL);

    logicalEnumerationLabelEClass = createEClass(LOGICAL_ENUMERATION_LABEL);

    logicalCoordinateSystemEClass = createEClass(LOGICAL_COORDINATE_SYSTEM);
    createEAttribute(logicalCoordinateSystemEClass, LOGICAL_COORDINATE_SYSTEM__AXIS_RELATIONSHIP_DESCRIPTION);
    createEAttribute(logicalCoordinateSystemEClass, LOGICAL_COORDINATE_SYSTEM__ANGLE_EQUATION);
    createEAttribute(logicalCoordinateSystemEClass, LOGICAL_COORDINATE_SYSTEM__DISTANCE_EQUATION);
    createEReference(logicalCoordinateSystemEClass, LOGICAL_COORDINATE_SYSTEM__AXIS);

    logicalCoordinateSystemAxisEClass = createEClass(LOGICAL_COORDINATE_SYSTEM_AXIS);

    logicalAbstractMeasurementSystemEClass = createEClass(LOGICAL_ABSTRACT_MEASUREMENT_SYSTEM);

    logicalStandardMeasurementSystemEClass = createEClass(LOGICAL_STANDARD_MEASUREMENT_SYSTEM);
    createEAttribute(logicalStandardMeasurementSystemEClass, LOGICAL_STANDARD_MEASUREMENT_SYSTEM__REFERENCE_STANDARD);

    logicalLandmarkEClass = createEClass(LOGICAL_LANDMARK);

    logicalMeasurementSystemEClass = createEClass(LOGICAL_MEASUREMENT_SYSTEM);
    createEReference(logicalMeasurementSystemEClass, LOGICAL_MEASUREMENT_SYSTEM__MEASUREMENT_SYSTEM_AXIS);
    createEReference(logicalMeasurementSystemEClass, LOGICAL_MEASUREMENT_SYSTEM__COORDINATE_SYSTEM);
    createEAttribute(logicalMeasurementSystemEClass, LOGICAL_MEASUREMENT_SYSTEM__EXTERNAL_STANDARD_REFERENCE);
    createEAttribute(logicalMeasurementSystemEClass, LOGICAL_MEASUREMENT_SYSTEM__ORIENTATION);
    createEReference(logicalMeasurementSystemEClass, LOGICAL_MEASUREMENT_SYSTEM__REFERENCE_POINT);
    createEReference(logicalMeasurementSystemEClass, LOGICAL_MEASUREMENT_SYSTEM__CONSTRAINT);

    logicalMeasurementSystemAxisEClass = createEClass(LOGICAL_MEASUREMENT_SYSTEM_AXIS);
    createEReference(logicalMeasurementSystemAxisEClass, LOGICAL_MEASUREMENT_SYSTEM_AXIS__AXIS);
    createEReference(logicalMeasurementSystemAxisEClass, LOGICAL_MEASUREMENT_SYSTEM_AXIS__DEFAULT_VALUE_TYPE_UNIT);
    createEReference(logicalMeasurementSystemAxisEClass, LOGICAL_MEASUREMENT_SYSTEM_AXIS__CONSTRAINT);

    logicalReferencePointEClass = createEClass(LOGICAL_REFERENCE_POINT);
    createEReference(logicalReferencePointEClass, LOGICAL_REFERENCE_POINT__LANDMARK);
    createEReference(logicalReferencePointEClass, LOGICAL_REFERENCE_POINT__REFERENCE_POINT_PART);

    logicalReferencePointPartEClass = createEClass(LOGICAL_REFERENCE_POINT_PART);
    createEReference(logicalReferencePointPartEClass, LOGICAL_REFERENCE_POINT_PART__AXIS);
    createEAttribute(logicalReferencePointPartEClass, LOGICAL_REFERENCE_POINT_PART__VALUE);
    createEReference(logicalReferencePointPartEClass, LOGICAL_REFERENCE_POINT_PART__VALUE_TYPE_UNIT);

    logicalValueTypeUnitEClass = createEClass(LOGICAL_VALUE_TYPE_UNIT);
    createEReference(logicalValueTypeUnitEClass, LOGICAL_VALUE_TYPE_UNIT__VALUE_TYPE);
    createEReference(logicalValueTypeUnitEClass, LOGICAL_VALUE_TYPE_UNIT__UNIT);
    createEReference(logicalValueTypeUnitEClass, LOGICAL_VALUE_TYPE_UNIT__CONSTRAINT);

    logicalConstraintEClass = createEClass(LOGICAL_CONSTRAINT);

    logicalIntegerRangeConstraintEClass = createEClass(LOGICAL_INTEGER_RANGE_CONSTRAINT);
    createEAttribute(logicalIntegerRangeConstraintEClass, LOGICAL_INTEGER_RANGE_CONSTRAINT__LOWER_BOUND);
    createEAttribute(logicalIntegerRangeConstraintEClass, LOGICAL_INTEGER_RANGE_CONSTRAINT__UPPER_BOUND);

    logicalRealRangeConstraintEClass = createEClass(LOGICAL_REAL_RANGE_CONSTRAINT);
    createEAttribute(logicalRealRangeConstraintEClass, LOGICAL_REAL_RANGE_CONSTRAINT__LOWER_BOUND_INCLUSIVE);
    createEAttribute(logicalRealRangeConstraintEClass, LOGICAL_REAL_RANGE_CONSTRAINT__LOWER_BOUND);
    createEAttribute(logicalRealRangeConstraintEClass, LOGICAL_REAL_RANGE_CONSTRAINT__UPPER_BOUND);
    createEAttribute(logicalRealRangeConstraintEClass, LOGICAL_REAL_RANGE_CONSTRAINT__UPPER_BOUND_INCLUSIVE);

    logicalStringConstraintEClass = createEClass(LOGICAL_STRING_CONSTRAINT);

    logicalRegularExpressionConstraintEClass = createEClass(LOGICAL_REGULAR_EXPRESSION_CONSTRAINT);
    createEAttribute(logicalRegularExpressionConstraintEClass, LOGICAL_REGULAR_EXPRESSION_CONSTRAINT__EXPRESSION);

    logicalFixedLengthStringConstraintEClass = createEClass(LOGICAL_FIXED_LENGTH_STRING_CONSTRAINT);
    createEAttribute(logicalFixedLengthStringConstraintEClass, LOGICAL_FIXED_LENGTH_STRING_CONSTRAINT__LENGTH);

    logicalEnumerationConstraintEClass = createEClass(LOGICAL_ENUMERATION_CONSTRAINT);
    createEReference(logicalEnumerationConstraintEClass, LOGICAL_ENUMERATION_CONSTRAINT__ALLOWED_VALUE);

    logicalMeasurementConstraintEClass = createEClass(LOGICAL_MEASUREMENT_CONSTRAINT);
    createEAttribute(logicalMeasurementConstraintEClass, LOGICAL_MEASUREMENT_CONSTRAINT__CONSTRAINT_TEXT);

    logicalMeasurementSystemConversionEClass = createEClass(LOGICAL_MEASUREMENT_SYSTEM_CONVERSION);
    createEReference(logicalMeasurementSystemConversionEClass, LOGICAL_MEASUREMENT_SYSTEM_CONVERSION__SOURCE);
    createEAttribute(logicalMeasurementSystemConversionEClass, LOGICAL_MEASUREMENT_SYSTEM_CONVERSION__EQUATION);
    createEReference(logicalMeasurementSystemConversionEClass, LOGICAL_MEASUREMENT_SYSTEM_CONVERSION__DESTINATION);
    createEAttribute(logicalMeasurementSystemConversionEClass, LOGICAL_MEASUREMENT_SYSTEM_CONVERSION__CONVERSION_LOSS_DESCRIPTION);

    logicalMeasurementEClass = createEClass(LOGICAL_MEASUREMENT);
    createEReference(logicalMeasurementEClass, LOGICAL_MEASUREMENT__REALIZES);
    createEReference(logicalMeasurementEClass, LOGICAL_MEASUREMENT__ATTRIBUTE);
    createEReference(logicalMeasurementEClass, LOGICAL_MEASUREMENT__MEASUREMENT_AXIS);
    createEReference(logicalMeasurementEClass, LOGICAL_MEASUREMENT__MEASUREMENT_SYSTEM);
    createEReference(logicalMeasurementEClass, LOGICAL_MEASUREMENT__CONSTRAINT);

    logicalMeasurementAxisEClass = createEClass(LOGICAL_MEASUREMENT_AXIS);
    createEReference(logicalMeasurementAxisEClass, LOGICAL_MEASUREMENT_AXIS__REALIZES);
    createEReference(logicalMeasurementAxisEClass, LOGICAL_MEASUREMENT_AXIS__VALUE_TYPE_UNIT);
    createEReference(logicalMeasurementAxisEClass, LOGICAL_MEASUREMENT_AXIS__MEASUREMENT_SYSTEM_AXIS);
    createEReference(logicalMeasurementAxisEClass, LOGICAL_MEASUREMENT_AXIS__CONSTRAINT);

    logicalMeasurementAttributeEClass = createEClass(LOGICAL_MEASUREMENT_ATTRIBUTE);
    createEReference(logicalMeasurementAttributeEClass, LOGICAL_MEASUREMENT_ATTRIBUTE__TYPE);
    createEAttribute(logicalMeasurementAttributeEClass, LOGICAL_MEASUREMENT_ATTRIBUTE__ROLENAME);

    logicalMeasurementConversionEClass = createEClass(LOGICAL_MEASUREMENT_CONVERSION);
    createEReference(logicalMeasurementConversionEClass, LOGICAL_MEASUREMENT_CONVERSION__SOURCE);
    createEAttribute(logicalMeasurementConversionEClass, LOGICAL_MEASUREMENT_CONVERSION__EQUATION);
    createEReference(logicalMeasurementConversionEClass, LOGICAL_MEASUREMENT_CONVERSION__DESTINATION);
    createEAttribute(logicalMeasurementConversionEClass, LOGICAL_MEASUREMENT_CONVERSION__CONVERSION_LOSS_DESCRIPTION);

    logicalComposableElementEClass = createEClass(LOGICAL_COMPOSABLE_ELEMENT);

    logicalCharacteristicEClass = createEClass(LOGICAL_CHARACTERISTIC);
    createEAttribute(logicalCharacteristicEClass, LOGICAL_CHARACTERISTIC__ROLENAME);
    createEAttribute(logicalCharacteristicEClass, LOGICAL_CHARACTERISTIC__LOWER_BOUND);
    createEAttribute(logicalCharacteristicEClass, LOGICAL_CHARACTERISTIC__UPPER_BOUND);
    createEAttribute(logicalCharacteristicEClass, LOGICAL_CHARACTERISTIC__DESCRIPTION);
    createEReference(logicalCharacteristicEClass, LOGICAL_CHARACTERISTIC__SPECIALIZES);

    logicalEntityEClass = createEClass(LOGICAL_ENTITY);
    createEReference(logicalEntityEClass, LOGICAL_ENTITY__SPECIALIZES);
    createEReference(logicalEntityEClass, LOGICAL_ENTITY__REALIZES);
    createEReference(logicalEntityEClass, LOGICAL_ENTITY__COMPOSITION);

    logicalCompositionEClass = createEClass(LOGICAL_COMPOSITION);
    createEReference(logicalCompositionEClass, LOGICAL_COMPOSITION__TYPE);
    createEReference(logicalCompositionEClass, LOGICAL_COMPOSITION__REALIZES);

    logicalAssociationEClass = createEClass(LOGICAL_ASSOCIATION);
    createEReference(logicalAssociationEClass, LOGICAL_ASSOCIATION__PARTICIPANT);

    logicalParticipantEClass = createEClass(LOGICAL_PARTICIPANT);
    createEReference(logicalParticipantEClass, LOGICAL_PARTICIPANT__TYPE);
    createEReference(logicalParticipantEClass, LOGICAL_PARTICIPANT__REALIZES);
    createEAttribute(logicalParticipantEClass, LOGICAL_PARTICIPANT__SOURCE_LOWER_BOUND);
    createEAttribute(logicalParticipantEClass, LOGICAL_PARTICIPANT__SOURCE_UPPER_BOUND);
    createEReference(logicalParticipantEClass, LOGICAL_PARTICIPANT__PATH);

    logicalPathNodeEClass = createEClass(LOGICAL_PATH_NODE);
    createEReference(logicalPathNodeEClass, LOGICAL_PATH_NODE__NODE);

    logicalParticipantPathNodeEClass = createEClass(LOGICAL_PARTICIPANT_PATH_NODE);
    createEReference(logicalParticipantPathNodeEClass, LOGICAL_PARTICIPANT_PATH_NODE__PROJECTED_PARTICIPANT);

    logicalCharacteristicPathNodeEClass = createEClass(LOGICAL_CHARACTERISTIC_PATH_NODE);
    createEReference(logicalCharacteristicPathNodeEClass, LOGICAL_CHARACTERISTIC_PATH_NODE__PROJECTED_CHARACTERISTIC);

    logicalViewEClass = createEClass(LOGICAL_VIEW);

    logicalQueryEClass = createEClass(LOGICAL_QUERY);
    createEReference(logicalQueryEClass, LOGICAL_QUERY__REALIZES);
    createEAttribute(logicalQueryEClass, LOGICAL_QUERY__SPECIFICATION);

    logicalCompositeQueryEClass = createEClass(LOGICAL_COMPOSITE_QUERY);
    createEReference(logicalCompositeQueryEClass, LOGICAL_COMPOSITE_QUERY__REALIZES);
    createEAttribute(logicalCompositeQueryEClass, LOGICAL_COMPOSITE_QUERY__IS_UNION);
    createEReference(logicalCompositeQueryEClass, LOGICAL_COMPOSITE_QUERY__COMPOSITION);

    logicalQueryCompositionEClass = createEClass(LOGICAL_QUERY_COMPOSITION);
    createEReference(logicalQueryCompositionEClass, LOGICAL_QUERY_COMPOSITION__TYPE);
    createEAttribute(logicalQueryCompositionEClass, LOGICAL_QUERY_COMPOSITION__ROLENAME);
    createEReference(logicalQueryCompositionEClass, LOGICAL_QUERY_COMPOSITION__REALIZES);

    platformElementEClass = createEClass(PLATFORM_ELEMENT);

    platformComposableElementEClass = createEClass(PLATFORM_COMPOSABLE_ELEMENT);

    platformDataTypeEClass = createEClass(PLATFORM_DATA_TYPE);
    createEReference(platformDataTypeEClass, PLATFORM_DATA_TYPE__REALIZES);

    platformPrimitiveEClass = createEClass(PLATFORM_PRIMITIVE);

    platformBooleanEClass = createEClass(PLATFORM_BOOLEAN);

    platformOctetEClass = createEClass(PLATFORM_OCTET);

    platformCharEClass = createEClass(PLATFORM_CHAR);

    platformStringTypeEClass = createEClass(PLATFORM_STRING_TYPE);

    platformStringEClass = createEClass(PLATFORM_STRING);

    platformBoundedStringEClass = createEClass(PLATFORM_BOUNDED_STRING);
    createEAttribute(platformBoundedStringEClass, PLATFORM_BOUNDED_STRING__MAX_LENGTH);

    platformCharArrayEClass = createEClass(PLATFORM_CHAR_ARRAY);
    createEAttribute(platformCharArrayEClass, PLATFORM_CHAR_ARRAY__LENGTH);

    platformEnumerationEClass = createEClass(PLATFORM_ENUMERATION);

    platformNumberEClass = createEClass(PLATFORM_NUMBER);

    platformIntegerEClass = createEClass(PLATFORM_INTEGER);

    platformShortEClass = createEClass(PLATFORM_SHORT);

    platformLongEClass = createEClass(PLATFORM_LONG);

    platformLongLongEClass = createEClass(PLATFORM_LONG_LONG);

    platformRealEClass = createEClass(PLATFORM_REAL);

    platformDoubleEClass = createEClass(PLATFORM_DOUBLE);

    platformLongDoubleEClass = createEClass(PLATFORM_LONG_DOUBLE);

    platformFloatEClass = createEClass(PLATFORM_FLOAT);

    platformFixedEClass = createEClass(PLATFORM_FIXED);
    createEAttribute(platformFixedEClass, PLATFORM_FIXED__DIGITS);
    createEAttribute(platformFixedEClass, PLATFORM_FIXED__SCALE);

    platformUnsignedIntegerEClass = createEClass(PLATFORM_UNSIGNED_INTEGER);

    platformUShortEClass = createEClass(PLATFORM_USHORT);

    platformULongEClass = createEClass(PLATFORM_ULONG);

    platformULongLongEClass = createEClass(PLATFORM_ULONG_LONG);

    platformSequenceEClass = createEClass(PLATFORM_SEQUENCE);
    createEAttribute(platformSequenceEClass, PLATFORM_SEQUENCE__MAX_SIZE);

    platformArrayEClass = createEClass(PLATFORM_ARRAY);
    createEAttribute(platformArrayEClass, PLATFORM_ARRAY__SIZE);

    platformStructEClass = createEClass(PLATFORM_STRUCT);
    createEReference(platformStructEClass, PLATFORM_STRUCT__MEMBER);

    platformStructMemberEClass = createEClass(PLATFORM_STRUCT_MEMBER);
    createEReference(platformStructMemberEClass, PLATFORM_STRUCT_MEMBER__TYPE);
    createEAttribute(platformStructMemberEClass, PLATFORM_STRUCT_MEMBER__ROLENAME);
    createEAttribute(platformStructMemberEClass, PLATFORM_STRUCT_MEMBER__PRECISION);
    createEReference(platformStructMemberEClass, PLATFORM_STRUCT_MEMBER__REALIZES);

    platformCharacteristicEClass = createEClass(PLATFORM_CHARACTERISTIC);
    createEAttribute(platformCharacteristicEClass, PLATFORM_CHARACTERISTIC__ROLENAME);
    createEAttribute(platformCharacteristicEClass, PLATFORM_CHARACTERISTIC__LOWER_BOUND);
    createEAttribute(platformCharacteristicEClass, PLATFORM_CHARACTERISTIC__UPPER_BOUND);
    createEAttribute(platformCharacteristicEClass, PLATFORM_CHARACTERISTIC__DESCRIPTION);
    createEReference(platformCharacteristicEClass, PLATFORM_CHARACTERISTIC__SPECIALIZES);

    platformEntityEClass = createEClass(PLATFORM_ENTITY);
    createEReference(platformEntityEClass, PLATFORM_ENTITY__SPECIALIZES);
    createEReference(platformEntityEClass, PLATFORM_ENTITY__REALIZES);
    createEReference(platformEntityEClass, PLATFORM_ENTITY__COMPOSITION);

    platformCompositionEClass = createEClass(PLATFORM_COMPOSITION);
    createEReference(platformCompositionEClass, PLATFORM_COMPOSITION__TYPE);
    createEReference(platformCompositionEClass, PLATFORM_COMPOSITION__REALIZES);
    createEAttribute(platformCompositionEClass, PLATFORM_COMPOSITION__PRECISION);

    platformAssociationEClass = createEClass(PLATFORM_ASSOCIATION);
    createEReference(platformAssociationEClass, PLATFORM_ASSOCIATION__PARTICIPANT);

    platformParticipantEClass = createEClass(PLATFORM_PARTICIPANT);
    createEReference(platformParticipantEClass, PLATFORM_PARTICIPANT__TYPE);
    createEReference(platformParticipantEClass, PLATFORM_PARTICIPANT__REALIZES);
    createEAttribute(platformParticipantEClass, PLATFORM_PARTICIPANT__SOURCE_LOWER_BOUND);
    createEAttribute(platformParticipantEClass, PLATFORM_PARTICIPANT__SOURCE_UPPER_BOUND);
    createEReference(platformParticipantEClass, PLATFORM_PARTICIPANT__PATH);

    platformPathNodeEClass = createEClass(PLATFORM_PATH_NODE);
    createEReference(platformPathNodeEClass, PLATFORM_PATH_NODE__NODE);

    platformParticipantPathNodeEClass = createEClass(PLATFORM_PARTICIPANT_PATH_NODE);
    createEReference(platformParticipantPathNodeEClass, PLATFORM_PARTICIPANT_PATH_NODE__PROJECTED_PARTICIPANT);

    platformCharacteristicPathNodeEClass = createEClass(PLATFORM_CHARACTERISTIC_PATH_NODE);
    createEReference(platformCharacteristicPathNodeEClass, PLATFORM_CHARACTERISTIC_PATH_NODE__PROJECTED_CHARACTERISTIC);

    platformViewEClass = createEClass(PLATFORM_VIEW);
    createEReference(platformViewEClass, PLATFORM_VIEW__REALIZES);

    platformQueryEClass = createEClass(PLATFORM_QUERY);
    createEAttribute(platformQueryEClass, PLATFORM_QUERY__SPECIFICATION);

    platformCompositeQueryEClass = createEClass(PLATFORM_COMPOSITE_QUERY);
    createEAttribute(platformCompositeQueryEClass, PLATFORM_COMPOSITE_QUERY__IS_UNION);
    createEReference(platformCompositeQueryEClass, PLATFORM_COMPOSITE_QUERY__COMPOSITION);

    platformQueryCompositionEClass = createEClass(PLATFORM_QUERY_COMPOSITION);
    createEReference(platformQueryCompositionEClass, PLATFORM_QUERY_COMPOSITION__TYPE);
    createEAttribute(platformQueryCompositionEClass, PLATFORM_QUERY_COMPOSITION__ROLENAME);
    createEReference(platformQueryCompositionEClass, PLATFORM_QUERY_COMPOSITION__REALIZES);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes
    dataModelEClass.getESuperTypes().add(this.getUddlElement());
    conceptualDataModelEClass.getESuperTypes().add(this.getUddlElement());
    logicalDataModelEClass.getESuperTypes().add(this.getUddlElement());
    platformDataModelEClass.getESuperTypes().add(this.getUddlElement());
    conceptualElementEClass.getESuperTypes().add(this.getUddlElement());
    conceptualComposableElementEClass.getESuperTypes().add(this.getConceptualElement());
    conceptualBasisEntityEClass.getESuperTypes().add(this.getConceptualElement());
    conceptualDomainEClass.getESuperTypes().add(this.getConceptualElement());
    conceptualObservableEClass.getESuperTypes().add(this.getConceptualComposableElement());
    conceptualEntityEClass.getESuperTypes().add(this.getConceptualComposableElement());
    conceptualCompositionEClass.getESuperTypes().add(this.getConceptualCharacteristic());
    conceptualAssociationEClass.getESuperTypes().add(this.getConceptualEntity());
    conceptualParticipantEClass.getESuperTypes().add(this.getConceptualCharacteristic());
    conceptualParticipantPathNodeEClass.getESuperTypes().add(this.getConceptualPathNode());
    conceptualCharacteristicPathNodeEClass.getESuperTypes().add(this.getConceptualPathNode());
    conceptualViewEClass.getESuperTypes().add(this.getConceptualElement());
    conceptualQueryEClass.getESuperTypes().add(this.getConceptualView());
    conceptualCompositeQueryEClass.getESuperTypes().add(this.getConceptualView());
    logicalElementEClass.getESuperTypes().add(this.getUddlElement());
    logicalUnitEClass.getESuperTypes().add(this.getLogicalElement());
    logicalConversionEClass.getESuperTypes().add(this.getLogicalElement());
    logicalAffineConversionEClass.getESuperTypes().add(this.getLogicalConversion());
    logicalValueTypeEClass.getESuperTypes().add(this.getLogicalElement());
    logicalStringEClass.getESuperTypes().add(this.getLogicalValueType());
    logicalCharacterEClass.getESuperTypes().add(this.getLogicalValueType());
    logicalBooleanEClass.getESuperTypes().add(this.getLogicalValueType());
    logicalNumericEClass.getESuperTypes().add(this.getLogicalValueType());
    logicalIntegerEClass.getESuperTypes().add(this.getLogicalNumeric());
    logicalNaturalEClass.getESuperTypes().add(this.getLogicalNumeric());
    logicalRealEClass.getESuperTypes().add(this.getLogicalNumeric());
    logicalNonNegativeRealEClass.getESuperTypes().add(this.getLogicalNumeric());
    logicalEnumeratedEClass.getESuperTypes().add(this.getLogicalEnumeratedBase());
    logicalEnumeratedBaseEClass.getESuperTypes().add(this.getLogicalValueType());
    logicalEnumeratedBaseEClass.getESuperTypes().add(this.getTaxonomy());
    logicalEnumeratedSetEClass.getESuperTypes().add(this.getLogicalEnumeratedBase());
    logicalEnumerationLabelEClass.getESuperTypes().add(this.getUddlElement());
    logicalEnumerationLabelEClass.getESuperTypes().add(this.getLogicalEnumeratedBase());
    logicalCoordinateSystemEClass.getESuperTypes().add(this.getLogicalElement());
    logicalCoordinateSystemAxisEClass.getESuperTypes().add(this.getLogicalElement());
    logicalAbstractMeasurementSystemEClass.getESuperTypes().add(this.getLogicalElement());
    logicalStandardMeasurementSystemEClass.getESuperTypes().add(this.getLogicalAbstractMeasurementSystem());
    logicalLandmarkEClass.getESuperTypes().add(this.getLogicalElement());
    logicalMeasurementSystemEClass.getESuperTypes().add(this.getLogicalAbstractMeasurementSystem());
    logicalMeasurementSystemAxisEClass.getESuperTypes().add(this.getLogicalElement());
    logicalReferencePointEClass.getESuperTypes().add(this.getUddlElement());
    logicalValueTypeUnitEClass.getESuperTypes().add(this.getLogicalElement());
    logicalConstraintEClass.getESuperTypes().add(this.getUddlElement());
    logicalIntegerRangeConstraintEClass.getESuperTypes().add(this.getLogicalConstraint());
    logicalRealRangeConstraintEClass.getESuperTypes().add(this.getLogicalConstraint());
    logicalStringConstraintEClass.getESuperTypes().add(this.getLogicalConstraint());
    logicalRegularExpressionConstraintEClass.getESuperTypes().add(this.getLogicalStringConstraint());
    logicalFixedLengthStringConstraintEClass.getESuperTypes().add(this.getLogicalStringConstraint());
    logicalEnumerationConstraintEClass.getESuperTypes().add(this.getLogicalConstraint());
    logicalMeasurementSystemConversionEClass.getESuperTypes().add(this.getLogicalElement());
    logicalMeasurementEClass.getESuperTypes().add(this.getLogicalComposableElement());
    logicalMeasurementAxisEClass.getESuperTypes().add(this.getLogicalElement());
    logicalMeasurementConversionEClass.getESuperTypes().add(this.getLogicalElement());
    logicalComposableElementEClass.getESuperTypes().add(this.getLogicalElement());
    logicalEntityEClass.getESuperTypes().add(this.getLogicalComposableElement());
    logicalCompositionEClass.getESuperTypes().add(this.getLogicalCharacteristic());
    logicalAssociationEClass.getESuperTypes().add(this.getLogicalEntity());
    logicalParticipantEClass.getESuperTypes().add(this.getLogicalCharacteristic());
    logicalParticipantPathNodeEClass.getESuperTypes().add(this.getLogicalPathNode());
    logicalCharacteristicPathNodeEClass.getESuperTypes().add(this.getLogicalPathNode());
    logicalViewEClass.getESuperTypes().add(this.getLogicalElement());
    logicalQueryEClass.getESuperTypes().add(this.getLogicalView());
    logicalCompositeQueryEClass.getESuperTypes().add(this.getLogicalView());
    platformElementEClass.getESuperTypes().add(this.getUddlElement());
    platformComposableElementEClass.getESuperTypes().add(this.getPlatformElement());
    platformDataTypeEClass.getESuperTypes().add(this.getPlatformComposableElement());
    platformPrimitiveEClass.getESuperTypes().add(this.getPlatformDataType());
    platformBooleanEClass.getESuperTypes().add(this.getPlatformPrimitive());
    platformOctetEClass.getESuperTypes().add(this.getPlatformPrimitive());
    platformCharEClass.getESuperTypes().add(this.getPlatformPrimitive());
    platformStringTypeEClass.getESuperTypes().add(this.getPlatformPrimitive());
    platformStringEClass.getESuperTypes().add(this.getPlatformStringType());
    platformBoundedStringEClass.getESuperTypes().add(this.getPlatformStringType());
    platformCharArrayEClass.getESuperTypes().add(this.getPlatformStringType());
    platformEnumerationEClass.getESuperTypes().add(this.getPlatformPrimitive());
    platformNumberEClass.getESuperTypes().add(this.getPlatformPrimitive());
    platformIntegerEClass.getESuperTypes().add(this.getPlatformNumber());
    platformShortEClass.getESuperTypes().add(this.getPlatformInteger());
    platformLongEClass.getESuperTypes().add(this.getPlatformInteger());
    platformLongLongEClass.getESuperTypes().add(this.getPlatformInteger());
    platformRealEClass.getESuperTypes().add(this.getPlatformNumber());
    platformDoubleEClass.getESuperTypes().add(this.getPlatformReal());
    platformLongDoubleEClass.getESuperTypes().add(this.getPlatformReal());
    platformFloatEClass.getESuperTypes().add(this.getPlatformReal());
    platformFixedEClass.getESuperTypes().add(this.getPlatformReal());
    platformUnsignedIntegerEClass.getESuperTypes().add(this.getPlatformInteger());
    platformUShortEClass.getESuperTypes().add(this.getPlatformUnsignedInteger());
    platformULongEClass.getESuperTypes().add(this.getPlatformUnsignedInteger());
    platformULongLongEClass.getESuperTypes().add(this.getPlatformUnsignedInteger());
    platformSequenceEClass.getESuperTypes().add(this.getPlatformPrimitive());
    platformArrayEClass.getESuperTypes().add(this.getPlatformPrimitive());
    platformStructEClass.getESuperTypes().add(this.getPlatformDataType());
    platformEntityEClass.getESuperTypes().add(this.getPlatformComposableElement());
    platformCompositionEClass.getESuperTypes().add(this.getPlatformCharacteristic());
    platformAssociationEClass.getESuperTypes().add(this.getPlatformEntity());
    platformParticipantEClass.getESuperTypes().add(this.getPlatformCharacteristic());
    platformParticipantPathNodeEClass.getESuperTypes().add(this.getPlatformPathNode());
    platformCharacteristicPathNodeEClass.getESuperTypes().add(this.getPlatformPathNode());
    platformViewEClass.getESuperTypes().add(this.getPlatformElement());
    platformQueryEClass.getESuperTypes().add(this.getPlatformView());
    platformCompositeQueryEClass.getESuperTypes().add(this.getPlatformView());

    // Initialize classes and features; add operations and parameters
    initEClass(dataModelEClass, DataModel.class, "DataModel", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getDataModel_Cdm(), this.getConceptualDataModel(), null, "cdm", null, 0, -1, DataModel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDataModel_Ldm(), this.getLogicalDataModel(), null, "ldm", null, 0, -1, DataModel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDataModel_Pdm(), this.getPlatformDataModel(), null, "pdm", null, 0, -1, DataModel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(includeEClass, Include.class, "Include", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getInclude_ImportedNamespace(), ecorePackage.getEString(), "importedNamespace", null, 0, 1, Include.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(uddlElementEClass, UddlElement.class, "UddlElement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getUddlElement_Name(), ecorePackage.getEString(), "name", null, 0, 1, UddlElement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getUddlElement_Description(), ecorePackage.getEString(), "description", null, 0, 1, UddlElement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(conceptualDataModelEClass, ConceptualDataModel.class, "ConceptualDataModel", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getConceptualDataModel_Element(), this.getConceptualElement(), null, "element", null, 0, -1, ConceptualDataModel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getConceptualDataModel_Cdm(), this.getConceptualDataModel(), null, "cdm", null, 0, -1, ConceptualDataModel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(logicalDataModelEClass, LogicalDataModel.class, "LogicalDataModel", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getLogicalDataModel_Element(), this.getLogicalElement(), null, "element", null, 0, -1, LogicalDataModel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getLogicalDataModel_Ldm(), this.getLogicalDataModel(), null, "ldm", null, 0, -1, LogicalDataModel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(platformDataModelEClass, PlatformDataModel.class, "PlatformDataModel", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getPlatformDataModel_Element(), this.getPlatformElement(), null, "element", null, 0, -1, PlatformDataModel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getPlatformDataModel_Pdm(), this.getPlatformDataModel(), null, "pdm", null, 0, -1, PlatformDataModel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(conceptualElementEClass, ConceptualElement.class, "ConceptualElement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(conceptualComposableElementEClass, ConceptualComposableElement.class, "ConceptualComposableElement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(conceptualBasisEntityEClass, ConceptualBasisEntity.class, "ConceptualBasisEntity", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(conceptualDomainEClass, ConceptualDomain.class, "ConceptualDomain", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(conceptualObservableEClass, ConceptualObservable.class, "ConceptualObservable", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(conceptualCharacteristicEClass, ConceptualCharacteristic.class, "ConceptualCharacteristic", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getConceptualCharacteristic_Rolename(), ecorePackage.getEString(), "rolename", null, 0, 1, ConceptualCharacteristic.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getConceptualCharacteristic_LowerBound(), ecorePackage.getEInt(), "lowerBound", null, 0, 1, ConceptualCharacteristic.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getConceptualCharacteristic_UpperBound(), ecorePackage.getEInt(), "upperBound", null, 0, 1, ConceptualCharacteristic.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getConceptualCharacteristic_Description(), ecorePackage.getEString(), "description", null, 0, 1, ConceptualCharacteristic.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getConceptualCharacteristic_Specializes(), this.getConceptualCharacteristic(), null, "specializes", null, 0, 1, ConceptualCharacteristic.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(conceptualEntityEClass, ConceptualEntity.class, "ConceptualEntity", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getConceptualEntity_Specializes(), this.getConceptualEntity(), null, "specializes", null, 0, 1, ConceptualEntity.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getConceptualEntity_Composition(), this.getConceptualComposition(), null, "composition", null, 0, -1, ConceptualEntity.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getConceptualEntity_BasisEntity(), this.getConceptualBasisEntity(), null, "basisEntity", null, 0, -1, ConceptualEntity.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(conceptualCompositionEClass, ConceptualComposition.class, "ConceptualComposition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getConceptualComposition_Type(), this.getConceptualComposableElement(), null, "type", null, 0, 1, ConceptualComposition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(conceptualAssociationEClass, ConceptualAssociation.class, "ConceptualAssociation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getConceptualAssociation_ConceptualBasisEntity(), this.getConceptualBasisEntity(), null, "ConceptualBasisEntity", null, 0, -1, ConceptualAssociation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getConceptualAssociation_Participant(), this.getConceptualParticipant(), null, "participant", null, 0, -1, ConceptualAssociation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(conceptualParticipantEClass, ConceptualParticipant.class, "ConceptualParticipant", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getConceptualParticipant_Type(), this.getConceptualEntity(), null, "type", null, 0, 1, ConceptualParticipant.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getConceptualParticipant_SourceLowerBound(), ecorePackage.getEInt(), "sourceLowerBound", null, 0, 1, ConceptualParticipant.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getConceptualParticipant_SourceUpperBound(), ecorePackage.getEInt(), "sourceUpperBound", null, 0, 1, ConceptualParticipant.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getConceptualParticipant_Path(), this.getConceptualPathNode(), null, "path", null, 0, 1, ConceptualParticipant.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(conceptualPathNodeEClass, ConceptualPathNode.class, "ConceptualPathNode", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getConceptualPathNode_Node(), this.getConceptualPathNode(), null, "node", null, 0, 1, ConceptualPathNode.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(conceptualParticipantPathNodeEClass, ConceptualParticipantPathNode.class, "ConceptualParticipantPathNode", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getConceptualParticipantPathNode_ProjectedParticipant(), this.getConceptualParticipant(), null, "projectedParticipant", null, 0, 1, ConceptualParticipantPathNode.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(conceptualCharacteristicPathNodeEClass, ConceptualCharacteristicPathNode.class, "ConceptualCharacteristicPathNode", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getConceptualCharacteristicPathNode_ProjectedCharacteristic(), this.getConceptualCharacteristic(), null, "projectedCharacteristic", null, 0, 1, ConceptualCharacteristicPathNode.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(conceptualViewEClass, ConceptualView.class, "ConceptualView", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(conceptualQueryEClass, ConceptualQuery.class, "ConceptualQuery", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getConceptualQuery_Specification(), ecorePackage.getEString(), "specification", null, 0, 1, ConceptualQuery.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(conceptualCompositeQueryEClass, ConceptualCompositeQuery.class, "ConceptualCompositeQuery", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getConceptualCompositeQuery_IsUnion(), ecorePackage.getEBoolean(), "isUnion", null, 0, 1, ConceptualCompositeQuery.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getConceptualCompositeQuery_Composition(), this.getConceptualQueryComposition(), null, "composition", null, 0, -1, ConceptualCompositeQuery.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(conceptualQueryCompositionEClass, ConceptualQueryComposition.class, "ConceptualQueryComposition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getConceptualQueryComposition_Type(), this.getConceptualView(), null, "type", null, 0, 1, ConceptualQueryComposition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getConceptualQueryComposition_Rolename(), ecorePackage.getEString(), "rolename", null, 0, 1, ConceptualQueryComposition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(logicalElementEClass, LogicalElement.class, "LogicalElement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(logicalUnitEClass, LogicalUnit.class, "LogicalUnit", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(logicalConversionEClass, LogicalConversion.class, "LogicalConversion", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getLogicalConversion_Source(), this.getLogicalAssociation(), null, "source", null, 0, 1, LogicalConversion.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getLogicalConversion_Destination(), this.getLogicalAssociation(), null, "destination", null, 0, 1, LogicalConversion.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(logicalAffineConversionEClass, LogicalAffineConversion.class, "LogicalAffineConversion", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getLogicalAffineConversion_ConversionFactor(), ecorePackage.getEFloat(), "conversionFactor", null, 0, 1, LogicalAffineConversion.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getLogicalAffineConversion_Offset(), ecorePackage.getEFloat(), "offset", null, 0, 1, LogicalAffineConversion.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(logicalValueTypeEClass, LogicalValueType.class, "LogicalValueType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(logicalStringEClass, LogicalString.class, "LogicalString", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(logicalCharacterEClass, LogicalCharacter.class, "LogicalCharacter", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(logicalBooleanEClass, LogicalBoolean.class, "LogicalBoolean", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(logicalNumericEClass, LogicalNumeric.class, "LogicalNumeric", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(logicalIntegerEClass, LogicalInteger.class, "LogicalInteger", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(logicalNaturalEClass, LogicalNatural.class, "LogicalNatural", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(logicalRealEClass, LogicalReal.class, "LogicalReal", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(logicalNonNegativeRealEClass, LogicalNonNegativeReal.class, "LogicalNonNegativeReal", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(logicalEnumeratedEClass, LogicalEnumerated.class, "LogicalEnumerated", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getLogicalEnumerated_StandardReference(), ecorePackage.getEString(), "standardReference", null, 0, 1, LogicalEnumerated.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getLogicalEnumerated_Label(), this.getLogicalEnumeratedBase(), null, "label", null, 0, -1, LogicalEnumerated.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(taxonomyEClass, Taxonomy.class, "Taxonomy", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(logicalEnumeratedBaseEClass, LogicalEnumeratedBase.class, "LogicalEnumeratedBase", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(logicalEnumeratedSetEClass, LogicalEnumeratedSet.class, "LogicalEnumeratedSet", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getLogicalEnumeratedSet_Label(), this.getLogicalEnumeratedBase(), null, "label", null, 0, -1, LogicalEnumeratedSet.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(logicalEnumerationLabelEClass, LogicalEnumerationLabel.class, "LogicalEnumerationLabel", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(logicalCoordinateSystemEClass, LogicalCoordinateSystem.class, "LogicalCoordinateSystem", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getLogicalCoordinateSystem_AxisRelationshipDescription(), ecorePackage.getEString(), "axisRelationshipDescription", null, 0, 1, LogicalCoordinateSystem.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getLogicalCoordinateSystem_AngleEquation(), ecorePackage.getEString(), "angleEquation", null, 0, 1, LogicalCoordinateSystem.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getLogicalCoordinateSystem_DistanceEquation(), ecorePackage.getEString(), "distanceEquation", null, 0, 1, LogicalCoordinateSystem.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getLogicalCoordinateSystem_Axis(), this.getLogicalCoordinateSystemAxis(), null, "axis", null, 0, -1, LogicalCoordinateSystem.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(logicalCoordinateSystemAxisEClass, LogicalCoordinateSystemAxis.class, "LogicalCoordinateSystemAxis", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(logicalAbstractMeasurementSystemEClass, LogicalAbstractMeasurementSystem.class, "LogicalAbstractMeasurementSystem", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(logicalStandardMeasurementSystemEClass, LogicalStandardMeasurementSystem.class, "LogicalStandardMeasurementSystem", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getLogicalStandardMeasurementSystem_ReferenceStandard(), ecorePackage.getEString(), "referenceStandard", null, 0, 1, LogicalStandardMeasurementSystem.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(logicalLandmarkEClass, LogicalLandmark.class, "LogicalLandmark", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(logicalMeasurementSystemEClass, LogicalMeasurementSystem.class, "LogicalMeasurementSystem", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getLogicalMeasurementSystem_MeasurementSystemAxis(), this.getLogicalMeasurementSystemAxis(), null, "measurementSystemAxis", null, 0, -1, LogicalMeasurementSystem.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getLogicalMeasurementSystem_CoordinateSystem(), this.getLogicalCoordinateSystem(), null, "coordinateSystem", null, 0, 1, LogicalMeasurementSystem.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getLogicalMeasurementSystem_ExternalStandardReference(), ecorePackage.getEString(), "externalStandardReference", null, 0, 1, LogicalMeasurementSystem.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getLogicalMeasurementSystem_Orientation(), ecorePackage.getEString(), "orientation", null, 0, 1, LogicalMeasurementSystem.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getLogicalMeasurementSystem_ReferencePoint(), this.getLogicalReferencePoint(), null, "referencePoint", null, 0, -1, LogicalMeasurementSystem.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getLogicalMeasurementSystem_Constraint(), this.getLogicalMeasurementConstraint(), null, "constraint", null, 0, -1, LogicalMeasurementSystem.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(logicalMeasurementSystemAxisEClass, LogicalMeasurementSystemAxis.class, "LogicalMeasurementSystemAxis", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getLogicalMeasurementSystemAxis_Axis(), this.getLogicalCoordinateSystemAxis(), null, "axis", null, 0, 1, LogicalMeasurementSystemAxis.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getLogicalMeasurementSystemAxis_DefaultValueTypeUnit(), this.getLogicalValueTypeUnit(), null, "defaultValueTypeUnit", null, 0, -1, LogicalMeasurementSystemAxis.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getLogicalMeasurementSystemAxis_Constraint(), this.getLogicalMeasurementConstraint(), null, "constraint", null, 0, -1, LogicalMeasurementSystemAxis.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(logicalReferencePointEClass, LogicalReferencePoint.class, "LogicalReferencePoint", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getLogicalReferencePoint_Landmark(), this.getLogicalLandmark(), null, "landmark", null, 0, 1, LogicalReferencePoint.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getLogicalReferencePoint_ReferencePointPart(), this.getLogicalReferencePointPart(), null, "referencePointPart", null, 0, -1, LogicalReferencePoint.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(logicalReferencePointPartEClass, LogicalReferencePointPart.class, "LogicalReferencePointPart", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getLogicalReferencePointPart_Axis(), this.getLogicalMeasurementSystemAxis(), null, "axis", null, 0, 1, LogicalReferencePointPart.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getLogicalReferencePointPart_Value(), ecorePackage.getEString(), "value", null, 0, 1, LogicalReferencePointPart.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getLogicalReferencePointPart_ValueTypeUnit(), this.getLogicalValueTypeUnit(), null, "valueTypeUnit", null, 0, 1, LogicalReferencePointPart.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(logicalValueTypeUnitEClass, LogicalValueTypeUnit.class, "LogicalValueTypeUnit", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getLogicalValueTypeUnit_ValueType(), this.getLogicalValueType(), null, "valueType", null, 0, 1, LogicalValueTypeUnit.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getLogicalValueTypeUnit_Unit(), this.getLogicalUnit(), null, "unit", null, 0, 1, LogicalValueTypeUnit.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getLogicalValueTypeUnit_Constraint(), this.getLogicalConstraint(), null, "constraint", null, 0, 1, LogicalValueTypeUnit.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(logicalConstraintEClass, LogicalConstraint.class, "LogicalConstraint", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(logicalIntegerRangeConstraintEClass, LogicalIntegerRangeConstraint.class, "LogicalIntegerRangeConstraint", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getLogicalIntegerRangeConstraint_LowerBound(), ecorePackage.getEInt(), "lowerBound", null, 0, 1, LogicalIntegerRangeConstraint.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getLogicalIntegerRangeConstraint_UpperBound(), ecorePackage.getEInt(), "upperBound", null, 0, 1, LogicalIntegerRangeConstraint.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(logicalRealRangeConstraintEClass, LogicalRealRangeConstraint.class, "LogicalRealRangeConstraint", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getLogicalRealRangeConstraint_LowerBoundInclusive(), ecorePackage.getEBoolean(), "lowerBoundInclusive", null, 0, 1, LogicalRealRangeConstraint.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getLogicalRealRangeConstraint_LowerBound(), ecorePackage.getEFloat(), "lowerBound", null, 0, 1, LogicalRealRangeConstraint.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getLogicalRealRangeConstraint_UpperBound(), ecorePackage.getEFloat(), "upperBound", null, 0, 1, LogicalRealRangeConstraint.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getLogicalRealRangeConstraint_UpperBoundInclusive(), ecorePackage.getEBoolean(), "upperBoundInclusive", null, 0, 1, LogicalRealRangeConstraint.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(logicalStringConstraintEClass, LogicalStringConstraint.class, "LogicalStringConstraint", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(logicalRegularExpressionConstraintEClass, LogicalRegularExpressionConstraint.class, "LogicalRegularExpressionConstraint", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getLogicalRegularExpressionConstraint_Expression(), ecorePackage.getEString(), "expression", null, 0, 1, LogicalRegularExpressionConstraint.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(logicalFixedLengthStringConstraintEClass, LogicalFixedLengthStringConstraint.class, "LogicalFixedLengthStringConstraint", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getLogicalFixedLengthStringConstraint_Length(), ecorePackage.getEInt(), "length", null, 0, 1, LogicalFixedLengthStringConstraint.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(logicalEnumerationConstraintEClass, LogicalEnumerationConstraint.class, "LogicalEnumerationConstraint", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getLogicalEnumerationConstraint_AllowedValue(), this.getLogicalEnumerationLabel(), null, "allowedValue", null, 0, -1, LogicalEnumerationConstraint.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(logicalMeasurementConstraintEClass, LogicalMeasurementConstraint.class, "LogicalMeasurementConstraint", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getLogicalMeasurementConstraint_ConstraintText(), ecorePackage.getEString(), "constraintText", null, 0, 1, LogicalMeasurementConstraint.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(logicalMeasurementSystemConversionEClass, LogicalMeasurementSystemConversion.class, "LogicalMeasurementSystemConversion", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getLogicalMeasurementSystemConversion_Source(), this.getLogicalMeasurementSystem(), null, "source", null, 0, 1, LogicalMeasurementSystemConversion.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getLogicalMeasurementSystemConversion_Equation(), ecorePackage.getEString(), "equation", null, 0, -1, LogicalMeasurementSystemConversion.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getLogicalMeasurementSystemConversion_Destination(), this.getLogicalMeasurementSystem(), null, "destination", null, 0, 1, LogicalMeasurementSystemConversion.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getLogicalMeasurementSystemConversion_ConversionLossDescription(), ecorePackage.getEString(), "conversionLossDescription", null, 0, 1, LogicalMeasurementSystemConversion.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(logicalMeasurementEClass, LogicalMeasurement.class, "LogicalMeasurement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getLogicalMeasurement_Realizes(), this.getConceptualObservable(), null, "realizes", null, 0, 1, LogicalMeasurement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getLogicalMeasurement_Attribute(), this.getLogicalMeasurementAttribute(), null, "attribute", null, 0, -1, LogicalMeasurement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getLogicalMeasurement_MeasurementAxis(), this.getLogicalMeasurementAxis(), null, "measurementAxis", null, 0, -1, LogicalMeasurement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getLogicalMeasurement_MeasurementSystem(), this.getLogicalAbstractMeasurementSystem(), null, "measurementSystem", null, 0, 1, LogicalMeasurement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getLogicalMeasurement_Constraint(), this.getLogicalMeasurementConstraint(), null, "constraint", null, 0, -1, LogicalMeasurement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(logicalMeasurementAxisEClass, LogicalMeasurementAxis.class, "LogicalMeasurementAxis", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getLogicalMeasurementAxis_Realizes(), this.getConceptualObservable(), null, "realizes", null, 0, 1, LogicalMeasurementAxis.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getLogicalMeasurementAxis_ValueTypeUnit(), this.getLogicalValueTypeUnit(), null, "valueTypeUnit", null, 0, -1, LogicalMeasurementAxis.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getLogicalMeasurementAxis_MeasurementSystemAxis(), this.getLogicalMeasurementSystemAxis(), null, "measurementSystemAxis", null, 0, 1, LogicalMeasurementAxis.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getLogicalMeasurementAxis_Constraint(), this.getLogicalMeasurementConstraint(), null, "constraint", null, 0, -1, LogicalMeasurementAxis.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(logicalMeasurementAttributeEClass, LogicalMeasurementAttribute.class, "LogicalMeasurementAttribute", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getLogicalMeasurementAttribute_Type(), this.getLogicalMeasurement(), null, "type", null, 0, 1, LogicalMeasurementAttribute.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getLogicalMeasurementAttribute_Rolename(), ecorePackage.getEString(), "rolename", null, 0, 1, LogicalMeasurementAttribute.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(logicalMeasurementConversionEClass, LogicalMeasurementConversion.class, "LogicalMeasurementConversion", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getLogicalMeasurementConversion_Source(), this.getLogicalMeasurementSystem(), null, "source", null, 0, 1, LogicalMeasurementConversion.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getLogicalMeasurementConversion_Equation(), ecorePackage.getEString(), "equation", null, 0, -1, LogicalMeasurementConversion.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getLogicalMeasurementConversion_Destination(), this.getLogicalMeasurementSystem(), null, "destination", null, 0, 1, LogicalMeasurementConversion.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getLogicalMeasurementConversion_ConversionLossDescription(), ecorePackage.getEString(), "conversionLossDescription", null, 0, 1, LogicalMeasurementConversion.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(logicalComposableElementEClass, LogicalComposableElement.class, "LogicalComposableElement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(logicalCharacteristicEClass, LogicalCharacteristic.class, "LogicalCharacteristic", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getLogicalCharacteristic_Rolename(), ecorePackage.getEString(), "rolename", null, 0, 1, LogicalCharacteristic.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getLogicalCharacteristic_LowerBound(), ecorePackage.getEInt(), "lowerBound", null, 0, 1, LogicalCharacteristic.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getLogicalCharacteristic_UpperBound(), ecorePackage.getEInt(), "upperBound", null, 0, 1, LogicalCharacteristic.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getLogicalCharacteristic_Description(), ecorePackage.getEString(), "description", null, 0, 1, LogicalCharacteristic.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getLogicalCharacteristic_Specializes(), this.getLogicalCharacteristic(), null, "specializes", null, 0, 1, LogicalCharacteristic.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(logicalEntityEClass, LogicalEntity.class, "LogicalEntity", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getLogicalEntity_Specializes(), this.getLogicalEntity(), null, "specializes", null, 0, 1, LogicalEntity.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getLogicalEntity_Realizes(), this.getConceptualEntity(), null, "realizes", null, 0, 1, LogicalEntity.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getLogicalEntity_Composition(), this.getLogicalComposition(), null, "composition", null, 0, -1, LogicalEntity.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(logicalCompositionEClass, LogicalComposition.class, "LogicalComposition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getLogicalComposition_Type(), this.getLogicalComposableElement(), null, "type", null, 0, 1, LogicalComposition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getLogicalComposition_Realizes(), this.getConceptualComposition(), null, "realizes", null, 0, 1, LogicalComposition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(logicalAssociationEClass, LogicalAssociation.class, "LogicalAssociation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getLogicalAssociation_Participant(), this.getLogicalParticipant(), null, "participant", null, 0, -1, LogicalAssociation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(logicalParticipantEClass, LogicalParticipant.class, "LogicalParticipant", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getLogicalParticipant_Type(), this.getLogicalEntity(), null, "type", null, 0, 1, LogicalParticipant.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getLogicalParticipant_Realizes(), this.getConceptualParticipant(), null, "realizes", null, 0, 1, LogicalParticipant.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getLogicalParticipant_SourceLowerBound(), ecorePackage.getEInt(), "sourceLowerBound", null, 0, 1, LogicalParticipant.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getLogicalParticipant_SourceUpperBound(), ecorePackage.getEInt(), "sourceUpperBound", null, 0, 1, LogicalParticipant.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getLogicalParticipant_Path(), this.getLogicalPathNode(), null, "path", null, 0, 1, LogicalParticipant.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(logicalPathNodeEClass, LogicalPathNode.class, "LogicalPathNode", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getLogicalPathNode_Node(), this.getLogicalPathNode(), null, "node", null, 0, 1, LogicalPathNode.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(logicalParticipantPathNodeEClass, LogicalParticipantPathNode.class, "LogicalParticipantPathNode", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getLogicalParticipantPathNode_ProjectedParticipant(), this.getLogicalParticipant(), null, "projectedParticipant", null, 0, 1, LogicalParticipantPathNode.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(logicalCharacteristicPathNodeEClass, LogicalCharacteristicPathNode.class, "LogicalCharacteristicPathNode", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getLogicalCharacteristicPathNode_ProjectedCharacteristic(), this.getLogicalCharacteristic(), null, "projectedCharacteristic", null, 0, 1, LogicalCharacteristicPathNode.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(logicalViewEClass, LogicalView.class, "LogicalView", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(logicalQueryEClass, LogicalQuery.class, "LogicalQuery", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getLogicalQuery_Realizes(), this.getConceptualQuery(), null, "realizes", null, 0, 1, LogicalQuery.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getLogicalQuery_Specification(), ecorePackage.getEString(), "specification", null, 0, 1, LogicalQuery.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(logicalCompositeQueryEClass, LogicalCompositeQuery.class, "LogicalCompositeQuery", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getLogicalCompositeQuery_Realizes(), this.getConceptualCompositeQuery(), null, "realizes", null, 0, 1, LogicalCompositeQuery.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getLogicalCompositeQuery_IsUnion(), ecorePackage.getEBoolean(), "isUnion", null, 0, 1, LogicalCompositeQuery.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getLogicalCompositeQuery_Composition(), this.getLogicalQueryComposition(), null, "composition", null, 0, -1, LogicalCompositeQuery.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(logicalQueryCompositionEClass, LogicalQueryComposition.class, "LogicalQueryComposition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getLogicalQueryComposition_Type(), this.getLogicalView(), null, "type", null, 0, 1, LogicalQueryComposition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getLogicalQueryComposition_Rolename(), ecorePackage.getEString(), "rolename", null, 0, 1, LogicalQueryComposition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getLogicalQueryComposition_Realizes(), this.getConceptualQueryComposition(), null, "realizes", null, 0, 1, LogicalQueryComposition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(platformElementEClass, PlatformElement.class, "PlatformElement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(platformComposableElementEClass, PlatformComposableElement.class, "PlatformComposableElement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(platformDataTypeEClass, PlatformDataType.class, "PlatformDataType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getPlatformDataType_Realizes(), this.getLogicalElement(), null, "realizes", null, 0, 1, PlatformDataType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(platformPrimitiveEClass, PlatformPrimitive.class, "PlatformPrimitive", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(platformBooleanEClass, PlatformBoolean.class, "PlatformBoolean", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(platformOctetEClass, PlatformOctet.class, "PlatformOctet", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(platformCharEClass, PlatformChar.class, "PlatformChar", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(platformStringTypeEClass, PlatformStringType.class, "PlatformStringType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(platformStringEClass, PlatformString.class, "PlatformString", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(platformBoundedStringEClass, PlatformBoundedString.class, "PlatformBoundedString", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getPlatformBoundedString_MaxLength(), ecorePackage.getEInt(), "maxLength", null, 0, 1, PlatformBoundedString.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(platformCharArrayEClass, PlatformCharArray.class, "PlatformCharArray", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getPlatformCharArray_Length(), ecorePackage.getEInt(), "length", null, 0, 1, PlatformCharArray.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(platformEnumerationEClass, PlatformEnumeration.class, "PlatformEnumeration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(platformNumberEClass, PlatformNumber.class, "PlatformNumber", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(platformIntegerEClass, PlatformInteger.class, "PlatformInteger", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(platformShortEClass, PlatformShort.class, "PlatformShort", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(platformLongEClass, PlatformLong.class, "PlatformLong", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(platformLongLongEClass, PlatformLongLong.class, "PlatformLongLong", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(platformRealEClass, PlatformReal.class, "PlatformReal", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(platformDoubleEClass, PlatformDouble.class, "PlatformDouble", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(platformLongDoubleEClass, PlatformLongDouble.class, "PlatformLongDouble", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(platformFloatEClass, PlatformFloat.class, "PlatformFloat", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(platformFixedEClass, PlatformFixed.class, "PlatformFixed", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getPlatformFixed_Digits(), ecorePackage.getEInt(), "digits", null, 0, 1, PlatformFixed.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getPlatformFixed_Scale(), ecorePackage.getEInt(), "scale", null, 0, 1, PlatformFixed.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(platformUnsignedIntegerEClass, PlatformUnsignedInteger.class, "PlatformUnsignedInteger", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(platformUShortEClass, PlatformUShort.class, "PlatformUShort", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(platformULongEClass, PlatformULong.class, "PlatformULong", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(platformULongLongEClass, PlatformULongLong.class, "PlatformULongLong", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(platformSequenceEClass, PlatformSequence.class, "PlatformSequence", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getPlatformSequence_MaxSize(), ecorePackage.getEInt(), "maxSize", null, 0, 1, PlatformSequence.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(platformArrayEClass, PlatformArray.class, "PlatformArray", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getPlatformArray_Size(), ecorePackage.getEInt(), "size", null, 0, 1, PlatformArray.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(platformStructEClass, PlatformStruct.class, "PlatformStruct", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getPlatformStruct_Member(), this.getPlatformStructMember(), null, "member", null, 0, -1, PlatformStruct.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(platformStructMemberEClass, PlatformStructMember.class, "PlatformStructMember", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getPlatformStructMember_Type(), this.getPlatformDataType(), null, "type", null, 0, 1, PlatformStructMember.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getPlatformStructMember_Rolename(), ecorePackage.getEString(), "rolename", null, 0, 1, PlatformStructMember.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getPlatformStructMember_Precision(), ecorePackage.getEFloat(), "precision", null, 0, 1, PlatformStructMember.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getPlatformStructMember_Realizes(), this.getLogicalMeasurementAttribute(), null, "realizes", null, 0, 1, PlatformStructMember.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(platformCharacteristicEClass, PlatformCharacteristic.class, "PlatformCharacteristic", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getPlatformCharacteristic_Rolename(), ecorePackage.getEString(), "rolename", null, 0, 1, PlatformCharacteristic.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getPlatformCharacteristic_LowerBound(), ecorePackage.getEInt(), "lowerBound", null, 0, 1, PlatformCharacteristic.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getPlatformCharacteristic_UpperBound(), ecorePackage.getEInt(), "upperBound", null, 0, 1, PlatformCharacteristic.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getPlatformCharacteristic_Description(), ecorePackage.getEString(), "description", null, 0, 1, PlatformCharacteristic.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getPlatformCharacteristic_Specializes(), this.getPlatformCharacteristic(), null, "specializes", null, 0, 1, PlatformCharacteristic.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(platformEntityEClass, PlatformEntity.class, "PlatformEntity", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getPlatformEntity_Specializes(), this.getPlatformEntity(), null, "specializes", null, 0, 1, PlatformEntity.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getPlatformEntity_Realizes(), this.getLogicalEntity(), null, "realizes", null, 0, 1, PlatformEntity.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getPlatformEntity_Composition(), this.getPlatformComposition(), null, "composition", null, 0, -1, PlatformEntity.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(platformCompositionEClass, PlatformComposition.class, "PlatformComposition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getPlatformComposition_Type(), this.getPlatformComposableElement(), null, "type", null, 0, 1, PlatformComposition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getPlatformComposition_Realizes(), this.getLogicalComposition(), null, "realizes", null, 0, 1, PlatformComposition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getPlatformComposition_Precision(), ecorePackage.getEFloat(), "precision", null, 0, 1, PlatformComposition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(platformAssociationEClass, PlatformAssociation.class, "PlatformAssociation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getPlatformAssociation_Participant(), this.getPlatformParticipant(), null, "participant", null, 0, -1, PlatformAssociation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(platformParticipantEClass, PlatformParticipant.class, "PlatformParticipant", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getPlatformParticipant_Type(), this.getPlatformEntity(), null, "type", null, 0, 1, PlatformParticipant.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getPlatformParticipant_Realizes(), this.getLogicalParticipant(), null, "realizes", null, 0, 1, PlatformParticipant.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getPlatformParticipant_SourceLowerBound(), ecorePackage.getEInt(), "sourceLowerBound", null, 0, 1, PlatformParticipant.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getPlatformParticipant_SourceUpperBound(), ecorePackage.getEInt(), "sourceUpperBound", null, 0, 1, PlatformParticipant.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getPlatformParticipant_Path(), this.getPlatformPathNode(), null, "path", null, 0, 1, PlatformParticipant.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(platformPathNodeEClass, PlatformPathNode.class, "PlatformPathNode", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getPlatformPathNode_Node(), this.getPlatformPathNode(), null, "node", null, 0, 1, PlatformPathNode.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(platformParticipantPathNodeEClass, PlatformParticipantPathNode.class, "PlatformParticipantPathNode", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getPlatformParticipantPathNode_ProjectedParticipant(), this.getPlatformParticipant(), null, "projectedParticipant", null, 0, 1, PlatformParticipantPathNode.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(platformCharacteristicPathNodeEClass, PlatformCharacteristicPathNode.class, "PlatformCharacteristicPathNode", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getPlatformCharacteristicPathNode_ProjectedCharacteristic(), this.getPlatformCharacteristic(), null, "projectedCharacteristic", null, 0, 1, PlatformCharacteristicPathNode.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(platformViewEClass, PlatformView.class, "PlatformView", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getPlatformView_Realizes(), this.getLogicalQuery(), null, "realizes", null, 0, 1, PlatformView.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(platformQueryEClass, PlatformQuery.class, "PlatformQuery", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getPlatformQuery_Specification(), ecorePackage.getEString(), "specification", null, 0, 1, PlatformQuery.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(platformCompositeQueryEClass, PlatformCompositeQuery.class, "PlatformCompositeQuery", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getPlatformCompositeQuery_IsUnion(), ecorePackage.getEBoolean(), "isUnion", null, 0, 1, PlatformCompositeQuery.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getPlatformCompositeQuery_Composition(), this.getPlatformQueryComposition(), null, "composition", null, 0, -1, PlatformCompositeQuery.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(platformQueryCompositionEClass, PlatformQueryComposition.class, "PlatformQueryComposition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getPlatformQueryComposition_Type(), this.getPlatformView(), null, "type", null, 0, 1, PlatformQueryComposition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getPlatformQueryComposition_Rolename(), ecorePackage.getEString(), "rolename", null, 0, 1, PlatformQueryComposition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getPlatformQueryComposition_Realizes(), this.getLogicalQueryComposition(), null, "realizes", null, 0, 1, PlatformQueryComposition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    // Create resource
    createResource(eNS_URI);
  }

} //UddlPackageImpl
