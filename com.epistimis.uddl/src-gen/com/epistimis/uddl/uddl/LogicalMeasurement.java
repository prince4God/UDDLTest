/**
 * generated by Xtext 2.32.0
 * Copyright (c) 2022, 2023 Epistimis LLC (http://www.epistimis.com).
 */
package com.epistimis.uddl.uddl;

import org.eclipse.emf.common.util.EList;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Logical Measurement</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link com.epistimis.uddl.uddl.LogicalMeasurement#getRealizes <em>Realizes</em>}</li>
 *   <li>{@link com.epistimis.uddl.uddl.LogicalMeasurement#getAttribute <em>Attribute</em>}</li>
 *   <li>{@link com.epistimis.uddl.uddl.LogicalMeasurement#getMeasurementAxis <em>Measurement Axis</em>}</li>
 *   <li>{@link com.epistimis.uddl.uddl.LogicalMeasurement#getMeasurementSystem <em>Measurement System</em>}</li>
 *   <li>{@link com.epistimis.uddl.uddl.LogicalMeasurement#getConstraint <em>Constraint</em>}</li>
 * </ul>
 *
 * @see com.epistimis.uddl.uddl.UddlPackage#getLogicalMeasurement()
 * @model
 * @generated
 */
public interface LogicalMeasurement extends LogicalComposableElement
{
  /**
   * Returns the value of the '<em><b>Realizes</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Realizes</em>' reference.
   * @see #setRealizes(ConceptualObservable)
   * @see com.epistimis.uddl.uddl.UddlPackage#getLogicalMeasurement_Realizes()
   * @model
   * @generated
   */
  ConceptualObservable getRealizes();

  /**
   * Sets the value of the '{@link com.epistimis.uddl.uddl.LogicalMeasurement#getRealizes <em>Realizes</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Realizes</em>' reference.
   * @see #getRealizes()
   * @generated
   */
  void setRealizes(ConceptualObservable value);

  /**
   * Returns the value of the '<em><b>Attribute</b></em>' containment reference list.
   * The list contents are of type {@link com.epistimis.uddl.uddl.LogicalMeasurementAttribute}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Attribute</em>' containment reference list.
   * @see com.epistimis.uddl.uddl.UddlPackage#getLogicalMeasurement_Attribute()
   * @model containment="true"
   * @generated
   */
  EList<LogicalMeasurementAttribute> getAttribute();

  /**
   * Returns the value of the '<em><b>Measurement Axis</b></em>' reference list.
   * The list contents are of type {@link com.epistimis.uddl.uddl.LogicalMeasurementAxis}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Measurement Axis</em>' reference list.
   * @see com.epistimis.uddl.uddl.UddlPackage#getLogicalMeasurement_MeasurementAxis()
   * @model
   * @generated
   */
  EList<LogicalMeasurementAxis> getMeasurementAxis();

  /**
   * Returns the value of the '<em><b>Measurement System</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Measurement System</em>' reference.
   * @see #setMeasurementSystem(LogicalAbstractMeasurementSystem)
   * @see com.epistimis.uddl.uddl.UddlPackage#getLogicalMeasurement_MeasurementSystem()
   * @model
   * @generated
   */
  LogicalAbstractMeasurementSystem getMeasurementSystem();

  /**
   * Sets the value of the '{@link com.epistimis.uddl.uddl.LogicalMeasurement#getMeasurementSystem <em>Measurement System</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Measurement System</em>' reference.
   * @see #getMeasurementSystem()
   * @generated
   */
  void setMeasurementSystem(LogicalAbstractMeasurementSystem value);

  /**
   * Returns the value of the '<em><b>Constraint</b></em>' containment reference list.
   * The list contents are of type {@link com.epistimis.uddl.uddl.LogicalMeasurementConstraint}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Constraint</em>' containment reference list.
   * @see com.epistimis.uddl.uddl.UddlPackage#getLogicalMeasurement_Constraint()
   * @model containment="true"
   * @generated
   */
  EList<LogicalMeasurementConstraint> getConstraint();

} // LogicalMeasurement
